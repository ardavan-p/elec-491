buildbin := "sensor-node-v2.elf"
targetbin := "sensor-node-v2.bin"

serialnum := "180044000200004E43504D4E"

id_one := "85"
id_two := "170"

all ID:
    @just clean
    @just generate {{ID}}
    @just build

generate ID:
    @if [ "{{ID}}" = "one" ]; then \
        cmake -S . -B ./build -DSENSOR_NODE_ID_ONE={{id_one}}; \
    elif [ "{{ID}}" = "two" ]; then \
        cmake -S . -B ./build -DSENSOR_NODE_ID_TWO={{id_two}}; \
    else \
        echo "Unknown option \"{{ID}}\". Choose between \"one\" or \"two\"."; \
        exit 1; \
    fi

build:
    cmake --build ./build
    cp ./build/compile_commands.json .
    just convert

clean:
    rm -rf ./build

convert:
    arm-none-eabi-objcopy -O binary ./build/{{buildbin}} ./build/{{targetbin}}

debug:
    echo "Starting ST-Link GDB server!"
    /opt/st/stm32cubeide_1.15.1/plugins/com.st.stm32cube.ide.mcu.externaltools.stlink-gdb-server.linux64_2.1.300.202403291623/tools/bin/ST-LINK_gdbserver -p 61234 --serial-number {{serialnum}} -l 1 -d -s -cp /opt/st/stm32cubeide_1.15.1/plugins/com.st.stm32cube.ide.mcu.externaltools.cubeprogrammer.linux64_2.1.201.202404072231/tools/bin -m 0 -k

attach:
    arm-none-eabi-gdb --eval-command="file ./build/{{buildbin}}" --eval-command="target remote localhost:61234"

flash:
    /opt/st/stm32cubeide_1.15.1/plugins/com.st.stm32cube.ide.mcu.externaltools.cubeprogrammer.linux64_2.1.201.202404072231/tools/bin/STM32_Programmer_CLI -c port=SWD sn={{serialnum}} -d ./build/{{targetbin}} 0x8000000 --verify

list:
    /opt/st/stm32cubeide_1.15.1/plugins/com.st.stm32cube.ide.mcu.externaltools.cubeprogrammer.linux64_2.1.201.202404072231/tools/bin/STM32_Programmer_CLI --list
    
