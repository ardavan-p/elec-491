ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_TIM_PeriodElapsedCallback
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	HAL_TIM_PeriodElapsedCallback:
  25              	.LVL0:
  26              	.LFB70:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   * @author         : Ardavan Pourkeramati
   7:Core/Src/main.c ****   ******************************************************************************
   8:Core/Src/main.c ****   * @attention
   9:Core/Src/main.c ****   *
  10:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  11:Core/Src/main.c ****   * All rights reserved.
  12:Core/Src/main.c ****   *
  13:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/main.c ****   * in the root directory of this software component.
  15:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "can.h"
  23:Core/Src/main.c **** #include "spi.h"
  24:Core/Src/main.c **** #include "tim.h"
  25:Core/Src/main.c **** #include "usart.h"
  26:Core/Src/main.c **** #include "gpio.h"
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  30:Core/Src/main.c **** #include "adf4351.h"
  31:Core/Src/main.c **** #include "nrf24l01.h"
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 2


  32:Core/Src/main.c **** #include <stdio.h>
  33:Core/Src/main.c **** #include <stdbool.h>
  34:Core/Src/main.c **** /* USER CODE END Includes */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PTD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PD */
  43:Core/Src/main.c **** #define FHSS_NUM_FREQS (100)
  44:Core/Src/main.c **** /* USER CODE END PD */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  47:Core/Src/main.c **** /* USER CODE BEGIN PM */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PM */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** const uint64_t fhss_freqs[FHSS_NUM_FREQS] = {
  55:Core/Src/main.c ****     915564235, 904440541, 903148600, 904227128, 917506829, 
  56:Core/Src/main.c ****     909397973, 908812571, 915449869, 919254899, 926507321, 
  57:Core/Src/main.c ****     925822447, 923067571, 903557369, 916691446, 912408403, 
  58:Core/Src/main.c ****     915808206, 903846361, 915402520, 906336386, 902037364, 
  59:Core/Src/main.c ****     909321452, 907231759, 918789091, 905750371, 923042615, 
  60:Core/Src/main.c ****     906372704, 912755720, 904459906, 906370088, 923731407, 
  61:Core/Src/main.c ****     903472249, 927657559, 912651500, 918619844, 925694767, 
  62:Core/Src/main.c ****     927554893, 919457550, 916626225, 906220683, 920235783, 
  63:Core/Src/main.c ****     921967008, 902299182, 911944043, 906843950, 926112279, 
  64:Core/Src/main.c ****     910403184, 923919218, 918063135, 924158523, 921292666, 
  65:Core/Src/main.c ****     904810996, 905714947, 913249837, 914091121, 925623877, 
  66:Core/Src/main.c ****     925355688, 906284260, 920917239, 917981303, 905593593, 
  67:Core/Src/main.c ****     917042242, 902399063, 923820062, 926307788, 909535172, 
  68:Core/Src/main.c ****     907539445, 925176093, 904984611, 909284218, 919224644, 
  69:Core/Src/main.c ****     905772047, 920586961, 916456393, 907262194, 916956907, 
  70:Core/Src/main.c ****     909592341, 924544342, 926980836, 922475339, 924512210, 
  71:Core/Src/main.c ****     926230896, 917236004, 912573921, 903178029, 924828246, 
  72:Core/Src/main.c ****     923296754, 916947099, 910847903, 926148369, 914389275, 
  73:Core/Src/main.c ****     915863526, 911243652, 904026491, 904906841, 912758865, 
  74:Core/Src/main.c ****     903310541, 907514837, 926261994, 927272190, 903953924
  75:Core/Src/main.c **** };
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* USER CODE END PV */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  80:Core/Src/main.c **** void SystemClock_Config(void);
  81:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  82:Core/Src/main.c **** void cmd_sm_init(void);
  83:Core/Src/main.c **** void read_back_config(void);
  84:Core/Src/main.c **** /* USER CODE END PFP */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  87:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  88:Core/Src/main.c **** 
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 3


  89:Core/Src/main.c **** /* USER CODE END 0 */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** /**
  92:Core/Src/main.c ****   * @brief  The application entry point.
  93:Core/Src/main.c ****   * @retval int
  94:Core/Src/main.c ****   */
  95:Core/Src/main.c **** int main(void)
  96:Core/Src/main.c **** {
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE END 1 */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 105:Core/Src/main.c ****   HAL_Init();
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   // Disable buffering for stdout:
 110:Core/Src/main.c ****   setvbuf(stdout, NULL, _IONBF, 0);
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* USER CODE END Init */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* Configure the system clock */
 115:Core/Src/main.c ****   SystemClock_Config();
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* USER CODE END SysInit */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* Initialize all configured peripherals */
 122:Core/Src/main.c ****   MX_GPIO_Init();
 123:Core/Src/main.c ****   MX_SPI1_Init();
 124:Core/Src/main.c ****   MX_TIM2_Init();
 125:Core/Src/main.c ****   MX_SPI2_Init();
 126:Core/Src/main.c ****   MX_CAN_Init();
 127:Core/Src/main.c ****   MX_USART3_UART_Init();
 128:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   // Set up initial state for SPI IO pins:
 131:Core/Src/main.c ****   HAL_GPIO_WritePin(SPI1_CSn_GPIO_Port, SPI1_CSn_Pin, 1);
 132:Core/Src/main.c ****   HAL_GPIO_WritePin(SPI1_LD_GPIO_Port, SPI1_LD_Pin, 1);
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   // PTN - SN pair status:
 135:Core/Src/main.c ****   bool ptn_sn_paired = false;
 136:Core/Src/main.c ****   uint8_t paired_sn_id = SN_ID_UNPAIRED;
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   // PTN ID Detection:
 139:Core/Src/main.c ****   uint8_t ptn_id = 0;
 140:Core/Src/main.c ****   if (HAL_GPIO_ReadPin(PTN_ID_Port, PTN_ID_Pin) == 1)
 141:Core/Src/main.c ****   {
 142:Core/Src/main.c ****     ptn_id = PTN_1;
 143:Core/Src/main.c ****   }
 144:Core/Src/main.c ****   else
 145:Core/Src/main.c ****   {
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 4


 146:Core/Src/main.c ****     ptn_id = PTN_2;
 147:Core/Src/main.c ****   }
 148:Core/Src/main.c ****   
 149:Core/Src/main.c ****   // Initialize the ADF4351 and keep it off:
 150:Core/Src/main.c ****   cmd_sm_init();
 151:Core/Src/main.c ****   adf4350_out_altvoltage0_powerdown(1);
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   // NRF24L01 chip enable (CE):
 154:Core/Src/main.c ****   HAL_GPIO_WritePin(CHIP_ENABLE_GPIO_Port, CHIP_ENABLE_Pin, 1);
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   // CAN Setup:
 157:Core/Src/main.c ****   CAN_FilterTypeDef can_filter = {
 158:Core/Src/main.c ****       .FilterIdHigh = (uint32_t)(PTN_REQUEST_ID << 5 | 0x0000),
 159:Core/Src/main.c ****       .FilterIdLow = 0,
 160:Core/Src/main.c ****       .FilterMaskIdHigh = (uint32_t)(PTN_RESET << 5 | 0x0000),
 161:Core/Src/main.c ****       .FilterMaskIdLow = 0,
 162:Core/Src/main.c ****       .FilterFIFOAssignment = CAN_FILTER_FIFO0,
 163:Core/Src/main.c ****       .FilterBank = 0,
 164:Core/Src/main.c ****       .FilterMode = CAN_FILTERMODE_IDLIST,
 165:Core/Src/main.c ****       .FilterScale = CAN_FILTERSCALE_32BIT,
 166:Core/Src/main.c ****       .FilterActivation = CAN_FILTER_ENABLE,
 167:Core/Src/main.c ****       .SlaveStartFilterBank = 0,
 168:Core/Src/main.c ****   };
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   HAL_CAN_ConfigFilter(&hcan, &can_filter);
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   HAL_CAN_Start(&hcan);
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   CAN_TxHeaderTypeDef tx_header = {
 175:Core/Src/main.c ****       .StdId = PTN_RESPONSE_ID,
 176:Core/Src/main.c ****       .ExtId = 0,
 177:Core/Src/main.c ****       .IDE = CAN_ID_STD,
 178:Core/Src/main.c ****       .RTR = CAN_RTR_DATA,
 179:Core/Src/main.c ****       .DLC = CAN_MSG_FRAME_LEN_BYTES,
 180:Core/Src/main.c ****       .TransmitGlobalTime = DISABLE,
 181:Core/Src/main.c ****   };
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****   uint8_t can_tx_payload[CAN_MSG_FRAME_LEN_BYTES] = {0};
 184:Core/Src/main.c ****   uint8_t can_rx_payload[CAN_MSG_FRAME_LEN_BYTES] = {0};
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   HAL_StatusTypeDef can_tx_status = HAL_OK;
 187:Core/Src/main.c ****   HAL_StatusTypeDef can_rx_status = HAL_OK;
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   CAN_RxHeaderTypeDef rx_header = {0};
 190:Core/Src/main.c ****   uint32_t can_tx_mailbox = 0;
 191:Core/Src/main.c **** 
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   // NRF24L01 Setup:
 194:Core/Src/main.c ****   uint8_t tx_payload[MAX_DATA_BYTES] = {0};
 195:Core/Src/main.c ****   uint8_t rf_payload[PAYLOAD_SZ_BYTES] = {0};
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   // [REQUIRED] Make sure to power on the device
 198:Core/Src/main.c ****   tx_payload[0] = 0b00111111;
 199:Core/Src/main.c ****   tx_spi_cmd(&hspi2, W_REGISTER(CONFIG_REGISTER), tx_payload, 1);
 200:Core/Src/main.c ****   HAL_Delay(500);
 201:Core/Src/main.c ****   
 202:Core/Src/main.c ****   // [REQUIRED] Make sure to power on the device
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 5


 203:Core/Src/main.c ****   tx_payload[0] = 0b00111111;
 204:Core/Src/main.c ****   tx_spi_cmd(&hspi2, W_REGISTER(CONFIG_REGISTER), tx_payload, 1);
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   // [REQUIRED] Set payload size for pipe 0
 207:Core/Src/main.c ****   tx_payload[0] = PAYLOAD_SZ_BYTES;
 208:Core/Src/main.c ****   tx_spi_cmd(&hspi2, W_REGISTER(RX_PW_P0), tx_payload, 1);
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   // [REQUIRED] Set the RF configuration
 211:Core/Src/main.c ****   NrfRfSetup_t rf_config = {.data_power = ZERO_DBM, .data_rate = TWO_MBPS};
 212:Core/Src/main.c ****   nrf24l01_setup_rf(&hspi2, &rf_config);
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   tx_spi_cmd(&hspi2, FLUSH_RX, NULL, 0);
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   // Read back the configs (for debugging):
 217:Core/Src/main.c ****   read_back_config();
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   // Initialize PTN status variable:
 220:Core/Src/main.c ****   uint8_t ptn_status = PTN_OK;
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   /* USER CODE END 2 */
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   /* Infinite loop */
 225:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 226:Core/Src/main.c ****   while (1)
 227:Core/Src/main.c ****   {
 228:Core/Src/main.c ****     // Ensure that RF output is off:
 229:Core/Src/main.c ****     adf4350_out_altvoltage0_powerdown(1);
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****     // Wait for CAN message:
 232:Core/Src/main.c ****     printf("\n\rWaiting for CAN");
 233:Core/Src/main.c ****     while(HAL_CAN_GetRxFifoFillLevel(&hcan, CAN_RX_FIFO0) <= 0);
 234:Core/Src/main.c ****     printf("\n\rCAN received");
 235:Core/Src/main.c ****     can_rx_status = HAL_CAN_GetRxMessage(&hcan, CAN_RX_FIFO0, &rx_header, can_rx_payload);
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****     // Decode the CAN message:
 238:Core/Src/main.c ****     const uint16_t ptn_can_id = rx_header.StdId;
 239:Core/Src/main.c ****     const uint16_t received_ptn_id = can_rx_payload[0];
 240:Core/Src/main.c ****     switch (ptn_can_id)
 241:Core/Src/main.c ****     {
 242:Core/Src/main.c ****       case (PTN_REQUEST_ID):
 243:Core/Src/main.c ****       {
 244:Core/Src/main.c ****         if (received_ptn_id == ptn_id)
 245:Core/Src/main.c ****         {
 246:Core/Src/main.c ****           goto request_handle;
 247:Core/Src/main.c ****         }
 248:Core/Src/main.c ****         else
 249:Core/Src/main.c ****         {
 250:Core/Src/main.c ****           goto end_while;
 251:Core/Src/main.c ****         }
 252:Core/Src/main.c ****       }
 253:Core/Src/main.c ****       break;
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****       case (PTN_RESET):
 256:Core/Src/main.c ****       {
 257:Core/Src/main.c ****         ptn_sn_paired = false;
 258:Core/Src/main.c ****         paired_sn_id = SN_ID_UNPAIRED;
 259:Core/Src/main.c ****         goto end_while;
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 6


 260:Core/Src/main.c ****       }
 261:Core/Src/main.c ****       break;
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****       default:
 264:Core/Src/main.c ****       {
 265:Core/Src/main.c ****         goto end_while;
 266:Core/Src/main.c ****       }
 267:Core/Src/main.c ****       break;
 268:Core/Src/main.c ****     }
 269:Core/Src/main.c **** 
 270:Core/Src/main.c **** request_handle:
 271:Core/Src/main.c ****     // When CAN message received, turn on RF power and frequency hopping:
 272:Core/Src/main.c ****     printf("\n\rRF power ON");
 273:Core/Src/main.c ****     adf4350_out_altvoltage0_powerdown(0);
 274:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim2);
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****     // Prepare to receive data from NRF24L01:
 277:Core/Src/main.c ****     int num_rx_msgs = 0;
 278:Core/Src/main.c ****     int num_uniq_msgs = 0;
 279:Core/Src/main.c ****     uint32_t prev_rand_id = 0;
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****     uint8_t cur_status = 0;
 282:Core/Src/main.c ****     uint8_t rx_fifo_empty = 1;
 283:Core/Src/main.c ****     uint8_t fifo_status = 0;
 284:Core/Src/main.c ****     uint8_t rxbuffer[RX_BUF_SZ_BYTES] = {0};
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****     uint32_t ref_time = HAL_GetTick();
 287:Core/Src/main.c ****     uint32_t millis_time = HAL_GetTick() - ref_time;
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****     
 290:Core/Src/main.c ****     // Poll the NRF24L01 until data is received. Start a timeout timer so RF output is not on indef
 291:Core/Src/main.c ****     printf("\n\rWaiting for NRF");
 292:Core/Src/main.c ****     while((!STATUS_RX_DR(nrf24l01_get_status(&hspi2))) && millis_time < NRF24L01_RX_TIMEOUT)
 293:Core/Src/main.c ****     {
 294:Core/Src/main.c ****       millis_time = HAL_GetTick() - ref_time;
 295:Core/Src/main.c ****     }
 296:Core/Src/main.c ****   
 297:Core/Src/main.c ****     // Power down the RF output:
 298:Core/Src/main.c ****     printf("\n\rRF power OFF");
 299:Core/Src/main.c ****     HAL_TIM_Base_Stop_IT(&htim2);
 300:Core/Src/main.c ****     adf4350_out_altvoltage0_powerdown(1);
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****     // If timeout timer did not expire (i.e., NRF24L01 received data), then go ahead and store the 
 303:Core/Src/main.c ****     sensor_msg_t rx_msg = {0};
 304:Core/Src/main.c ****     if (millis_time < NRF24L01_RX_TIMEOUT)
 305:Core/Src/main.c ****     {
 306:Core/Src/main.c ****       printf("\n\rNRF received data");
 307:Core/Src/main.c **** 
 308:Core/Src/main.c ****       ptn_status = PTN_OK;
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****       do
 311:Core/Src/main.c ****       {
 312:Core/Src/main.c ****         // Step 1 - Read the RX payload:
 313:Core/Src/main.c ****         tx_rx_spi_cmd(&hspi2, R_RX_PAYLOAD, NULL, 0, rxbuffer, PAYLOAD_SZ_BYTES + 1);
 314:Core/Src/main.c **** 
 315:Core/Src/main.c ****         num_rx_msgs++;
 316:Core/Src/main.c **** 
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 7


 317:Core/Src/main.c ****         // Unpack the message into its components:
 318:Core/Src/main.c ****         memcpy((void*)(&rx_msg), (void*)(&rxbuffer), PAYLOAD_SZ_BYTES);
 319:Core/Src/main.c **** 
 320:Core/Src/main.c ****         if (rx_msg.msg_id != prev_rand_id)
 321:Core/Src/main.c ****         {
 322:Core/Src/main.c ****           num_uniq_msgs++;
 323:Core/Src/main.c ****           prev_rand_id = rx_msg.msg_id;
 324:Core/Src/main.c ****         }
 325:Core/Src/main.c **** 
 326:Core/Src/main.c ****         printf("[m: %d] [u: %d] Received message with id = 0x%04x, node_id = 0x%02x! pressure = %d,
 327:Core/Src/main.c ****             num_rx_msgs, num_uniq_msgs, rx_msg.msg_id, rx_msg.node_id, rx_msg.pressure, rx_msg.temp
 328:Core/Src/main.c **** 
 329:Core/Src/main.c ****         // Clear out the RX buffer:
 330:Core/Src/main.c ****         memset(&rxbuffer, 0, sizeof(rxbuffer));
 331:Core/Src/main.c **** 
 332:Core/Src/main.c ****         // Step 2 - Clear the RX_DR IRQ bit:
 333:Core/Src/main.c ****         tx_payload[0] = 0b01000000;
 334:Core/Src/main.c ****         tx_spi_cmd(&hspi2, W_REGISTER(STATUS), tx_payload, 1);
 335:Core/Src/main.c **** 
 336:Core/Src/main.c ****         // Step 3 - Check FIFO_STATUS to see if there's any more messages:
 337:Core/Src/main.c ****         tx_rx_spi_cmd(&hspi2, R_REGISTER(FIFO_STATUS), NULL, 0, rxbuffer, 1);
 338:Core/Src/main.c ****         fifo_status = rxbuffer[0];
 339:Core/Src/main.c ****         rx_fifo_empty = FIFO_STATUS_RX_EMPTY(fifo_status);
 340:Core/Src/main.c **** 
 341:Core/Src/main.c ****       } while (!rx_fifo_empty);
 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****       // If the PTN is not paired to any SN, then pair the received SN to this PTN
 344:Core/Src/main.c ****       // The bool 'ptn_sn_paired' is only false after a reset command from the master ECU
 345:Core/Src/main.c ****       // 'ptn_sn_paired' will remain false unless a sensor node responds to this PTN 
 346:Core/Src/main.c ****       if (ptn_sn_paired == false)
 347:Core/Src/main.c ****       {
 348:Core/Src/main.c ****         paired_sn_id = rx_msg.node_id;
 349:Core/Src/main.c ****         ptn_sn_paired = true;
 350:Core/Src/main.c ****       }
 351:Core/Src/main.c **** 
 352:Core/Src/main.c ****       // Detect if there is a mismatch by comparing to the sensor node ID stored during pairing:
 353:Core/Src/main.c ****       if (paired_sn_id != rx_msg.node_id)
 354:Core/Src/main.c ****       {
 355:Core/Src/main.c ****         ptn_status = PTN_ERROR_MISMATCH;
 356:Core/Src/main.c ****       }
 357:Core/Src/main.c ****     }
 358:Core/Src/main.c ****     else  // Else, timeout timer expired, so set an error:
 359:Core/Src/main.c ****     {
 360:Core/Src/main.c ****       ptn_status = PTN_ERROR_TIMEOUT;
 361:Core/Src/main.c ****       printf("\n\rERROR: Timeout");
 362:Core/Src/main.c ****     }
 363:Core/Src/main.c **** 
 364:Core/Src/main.c ****     // Pack and transmit CAN message:
 365:Core/Src/main.c ****     printf("\n\rSending back PTN RESPONSE");
 366:Core/Src/main.c ****     *((uint16_t*)can_tx_payload) = rx_msg.pressure;
 367:Core/Src/main.c ****     *((uint16_t*)can_tx_payload + 1) = rx_msg.temperature;
 368:Core/Src/main.c ****     *((uint8_t*)can_tx_payload + 4) = ptn_id;
 369:Core/Src/main.c ****     *((uint8_t*)can_tx_payload + 5) = rx_msg.node_id;
 370:Core/Src/main.c ****     *((uint8_t*)can_tx_payload + 6) = ptn_status;
 371:Core/Src/main.c ****     *((uint8_t*)can_tx_payload + 7) = (uint8_t)ptn_sn_paired;
 372:Core/Src/main.c **** 
 373:Core/Src/main.c ****     while (HAL_CAN_GetTxMailboxesFreeLevel(&hcan) <= 0);
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 8


 374:Core/Src/main.c ****     can_tx_status = HAL_CAN_AddTxMessage(&hcan, &tx_header, can_tx_payload, &can_tx_mailbox);
 375:Core/Src/main.c **** 
 376:Core/Src/main.c **** 
 377:Core/Src/main.c **** end_while:
 378:Core/Src/main.c ****     // Ensure the RF output is off:
 379:Core/Src/main.c ****     adf4350_out_altvoltage0_powerdown(1);
 380:Core/Src/main.c ****     /* USER CODE END WHILE */
 381:Core/Src/main.c **** 
 382:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 383:Core/Src/main.c ****   }  
 384:Core/Src/main.c ****   /* USER CODE END 3 */
 385:Core/Src/main.c **** }
 386:Core/Src/main.c **** 
 387:Core/Src/main.c **** /**
 388:Core/Src/main.c ****   * @brief System Clock Configuration
 389:Core/Src/main.c ****   * @retval None
 390:Core/Src/main.c ****   */
 391:Core/Src/main.c **** void SystemClock_Config(void)
 392:Core/Src/main.c **** {
 393:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 394:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 395:Core/Src/main.c **** 
 396:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 397:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 398:Core/Src/main.c ****   */
 399:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 400:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 401:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV2;
 402:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 403:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 404:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 405:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 406:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 407:Core/Src/main.c ****   {
 408:Core/Src/main.c ****     Error_Handler();
 409:Core/Src/main.c ****   }
 410:Core/Src/main.c **** 
 411:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 412:Core/Src/main.c ****   */
 413:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 414:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 415:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 416:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 417:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 418:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 419:Core/Src/main.c **** 
 420:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 421:Core/Src/main.c ****   {
 422:Core/Src/main.c ****     Error_Handler();
 423:Core/Src/main.c ****   }
 424:Core/Src/main.c **** }
 425:Core/Src/main.c **** 
 426:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 427:Core/Src/main.c **** 
 428:Core/Src/main.c **** 
 429:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef* htim)
 430:Core/Src/main.c **** {
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 9


  28              		.loc 1 430 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 430 1 is_stmt 0 view .LVU1
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
 431:Core/Src/main.c ****   static uint8_t i = 0;
  38              		.loc 1 431 3 is_stmt 1 view .LVU2
 432:Core/Src/main.c ****   adf4350_out_altvoltage0_frequency(fhss_freqs[i]);
  39              		.loc 1 432 3 view .LVU3
  40              		.loc 1 432 47 is_stmt 0 view .LVU4
  41 0002 0A4C     		ldr	r4, .L3
  42 0004 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
  43 0006 0A4B     		ldr	r3, .L3+4
  44 0008 03EBC203 		add	r3, r3, r2, lsl #3
  45              		.loc 1 432 3 view .LVU5
  46 000c D3E90001 		ldrd	r0, [r3]
  47              	.LVL1:
  48              		.loc 1 432 3 view .LVU6
  49 0010 FFF7FEFF 		bl	adf4350_out_altvoltage0_frequency
  50              	.LVL2:
 433:Core/Src/main.c ****   i = (i + 1) % FHSS_NUM_FREQS;
  51              		.loc 1 433 3 is_stmt 1 view .LVU7
  52              		.loc 1 433 10 is_stmt 0 view .LVU8
  53 0014 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
  54 0016 0132     		adds	r2, r2, #1
  55              		.loc 1 433 15 view .LVU9
  56 0018 064B     		ldr	r3, .L3+8
  57 001a 83FB0213 		smull	r1, r3, r3, r2
  58 001e 5B11     		asrs	r3, r3, #5
  59 0020 6421     		movs	r1, #100
  60 0022 01FB1323 		mls	r3, r1, r3, r2
  61              		.loc 1 433 5 view .LVU10
  62 0026 2370     		strb	r3, [r4]
 434:Core/Src/main.c **** }
  63              		.loc 1 434 1 view .LVU11
  64 0028 10BD     		pop	{r4, pc}
  65              	.L4:
  66 002a 00BF     		.align	2
  67              	.L3:
  68 002c 00000000 		.word	.LANCHOR1
  69 0030 00000000 		.word	.LANCHOR0
  70 0034 1F85EB51 		.word	1374389535
  71              		.cfi_endproc
  72              	.LFE70:
  74              		.section	.text.cmd_sm_init,"ax",%progbits
  75              		.align	1
  76              		.global	cmd_sm_init
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  81              	cmd_sm_init:
  82              	.LFB71:
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 10


 435:Core/Src/main.c **** 
 436:Core/Src/main.c **** 
 437:Core/Src/main.c **** adf4350_init_param pll_config;
 438:Core/Src/main.c **** 
 439:Core/Src/main.c **** void cmd_sm_init()
 440:Core/Src/main.c **** {
  83              		.loc 1 440 1 is_stmt 1 view -0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87 0000 10B5     		push	{r4, lr}
  88              	.LCFI1:
  89              		.cfi_def_cfa_offset 8
  90              		.cfi_offset 4, -8
  91              		.cfi_offset 14, -4
  92 0002 8CB0     		sub	sp, sp, #48
  93              	.LCFI2:
  94              		.cfi_def_cfa_offset 56
 441:Core/Src/main.c ****   // initialize pll_config structure
 442:Core/Src/main.c ****   pll_config.clkin = 25e6;
  95              		.loc 1 442 3 view .LVU13
  96              		.loc 1 442 20 is_stmt 0 view .LVU14
  97 0004 1F4C     		ldr	r4, .L7
  98 0006 204B     		ldr	r3, .L7+4
  99 0008 2360     		str	r3, [r4]
 443:Core/Src/main.c ****   pll_config.channel_spacing = 100;
 100              		.loc 1 443 3 is_stmt 1 view .LVU15
 101              		.loc 1 443 30 is_stmt 0 view .LVU16
 102 000a 6423     		movs	r3, #100
 103 000c 6360     		str	r3, [r4, #4]
 444:Core/Src/main.c ****   pll_config.power_up_frequency = 146e6;
 104              		.loc 1 444 3 is_stmt 1 view .LVU17
 105              		.loc 1 444 33 is_stmt 0 view .LVU18
 106 000e 1F4B     		ldr	r3, .L7+8
 107 0010 A360     		str	r3, [r4, #8]
 445:Core/Src/main.c ****   pll_config.reference_div_factor = 1;
 108              		.loc 1 445 3 is_stmt 1 view .LVU19
 109              		.loc 1 445 35 is_stmt 0 view .LVU20
 110 0012 0123     		movs	r3, #1
 111 0014 E360     		str	r3, [r4, #12]
 446:Core/Src/main.c ****   pll_config.reference_doubler_enable = 0;
 112              		.loc 1 446 3 is_stmt 1 view .LVU21
 113              		.loc 1 446 39 is_stmt 0 view .LVU22
 114 0016 0020     		movs	r0, #0
 115 0018 2074     		strb	r0, [r4, #16]
 447:Core/Src/main.c ****   pll_config.reference_div2_enable = 0;
 116              		.loc 1 447 3 is_stmt 1 view .LVU23
 117              		.loc 1 447 36 is_stmt 0 view .LVU24
 118 001a 6074     		strb	r0, [r4, #17]
 448:Core/Src/main.c ****   pll_config.phase_detector_polarity_positive_enable = 1;
 119              		.loc 1 448 3 is_stmt 1 view .LVU25
 120              		.loc 1 448 54 is_stmt 0 view .LVU26
 121 001c A374     		strb	r3, [r4, #18]
 449:Core/Src/main.c ****   pll_config.lock_detect_precision_6ns_enable = 0; // 10 ns
 122              		.loc 1 449 3 is_stmt 1 view .LVU27
 123              		.loc 1 449 47 is_stmt 0 view .LVU28
 124 001e E074     		strb	r0, [r4, #19]
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 11


 450:Core/Src/main.c ****   pll_config.lock_detect_function_integer_n_enable = 0; // Fractional pll
 125              		.loc 1 450 3 is_stmt 1 view .LVU29
 126              		.loc 1 450 52 is_stmt 0 view .LVU30
 127 0020 2075     		strb	r0, [r4, #20]
 451:Core/Src/main.c ****   pll_config.charge_pump_current = 7; //2.50
 128              		.loc 1 451 3 is_stmt 1 view .LVU31
 129              		.loc 1 451 34 is_stmt 0 view .LVU32
 130 0022 0722     		movs	r2, #7
 131 0024 A261     		str	r2, [r4, #24]
 452:Core/Src/main.c ****   pll_config.muxout_select = 6; // Digital Lock Detect Out
 132              		.loc 1 452 3 is_stmt 1 view .LVU33
 133              		.loc 1 452 28 is_stmt 0 view .LVU34
 134 0026 0622     		movs	r2, #6
 135 0028 E261     		str	r2, [r4, #28]
 453:Core/Src/main.c ****   pll_config.low_spur_mode_enable = 1; // higher noise, lower spurs.
 136              		.loc 1 453 3 is_stmt 1 view .LVU35
 137              		.loc 1 453 35 is_stmt 0 view .LVU36
 138 002a 84F82030 		strb	r3, [r4, #32]
 454:Core/Src/main.c ****   pll_config.cycle_slip_reduction_enable = 0;
 139              		.loc 1 454 3 is_stmt 1 view .LVU37
 140              		.loc 1 454 42 is_stmt 0 view .LVU38
 141 002e 84F82100 		strb	r0, [r4, #33]
 455:Core/Src/main.c ****   pll_config.charge_cancellation_enable = 0;
 142              		.loc 1 455 3 is_stmt 1 view .LVU39
 143              		.loc 1 455 41 is_stmt 0 view .LVU40
 144 0032 84F82200 		strb	r0, [r4, #34]
 456:Core/Src/main.c ****   pll_config.anti_backlash_3ns_enable = 0;
 145              		.loc 1 456 3 is_stmt 1 view .LVU41
 146              		.loc 1 456 39 is_stmt 0 view .LVU42
 147 0036 84F82300 		strb	r0, [r4, #35]
 457:Core/Src/main.c ****   pll_config.band_select_clock_mode_high_enable = 0; // low
 148              		.loc 1 457 3 is_stmt 1 view .LVU43
 149              		.loc 1 457 49 is_stmt 0 view .LVU44
 150 003a 84F82400 		strb	r0, [r4, #36]
 458:Core/Src/main.c ****   pll_config.clk_divider_12bit = 0;
 151              		.loc 1 458 3 is_stmt 1 view .LVU45
 152              		.loc 1 458 32 is_stmt 0 view .LVU46
 153 003e A062     		str	r0, [r4, #40]
 459:Core/Src/main.c ****   pll_config.clk_divider_mode = 0;
 154              		.loc 1 459 3 is_stmt 1 view .LVU47
 155              		.loc 1 459 31 is_stmt 0 view .LVU48
 156 0040 E062     		str	r0, [r4, #44]
 460:Core/Src/main.c ****   pll_config.aux_output_enable = 0;
 157              		.loc 1 460 3 is_stmt 1 view .LVU49
 158              		.loc 1 460 32 is_stmt 0 view .LVU50
 159 0042 84F83000 		strb	r0, [r4, #48]
 461:Core/Src/main.c ****   pll_config.aux_output_fundamental_enable = 0;
 160              		.loc 1 461 3 is_stmt 1 view .LVU51
 161              		.loc 1 461 44 is_stmt 0 view .LVU52
 162 0046 84F83100 		strb	r0, [r4, #49]
 462:Core/Src/main.c ****   pll_config.mute_till_lock_enable = 1;
 163              		.loc 1 462 3 is_stmt 1 view .LVU53
 164              		.loc 1 462 36 is_stmt 0 view .LVU54
 165 004a 84F83230 		strb	r3, [r4, #50]
 463:Core/Src/main.c ****   pll_config.output_power = 2; // +2 dBm
 166              		.loc 1 463 3 is_stmt 1 view .LVU55
 167              		.loc 1 463 27 is_stmt 0 view .LVU56
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 12


 168 004e 0223     		movs	r3, #2
 169 0050 6363     		str	r3, [r4, #52]
 464:Core/Src/main.c ****   pll_config.aux_output_power = ADF4541_POWER_N4_DBM;
 170              		.loc 1 464 3 is_stmt 1 view .LVU57
 171              		.loc 1 464 31 is_stmt 0 view .LVU58
 172 0052 A063     		str	r0, [r4, #56]
 465:Core/Src/main.c ****   adf4350_out_altvoltage0_powerdown(0); // power down PLL
 173              		.loc 1 465 3 is_stmt 1 view .LVU59
 174 0054 FFF7FEFF 		bl	adf4350_out_altvoltage0_powerdown
 175              	.LVL3:
 466:Core/Src/main.c ****   adf4350_setup(pll_config);
 176              		.loc 1 466 3 view .LVU60
 177 0058 EC46     		mov	ip, sp
 178 005a 04F1100E 		add	lr, r4, #16
 179 005e BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 180 0062 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 181 0066 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 182 006a ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 183 006e 9EE80700 		ldm	lr, {r0, r1, r2}
 184 0072 8CE80700 		stm	ip, {r0, r1, r2}
 185 0076 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 186 007a FFF7FEFF 		bl	adf4350_setup
 187              	.LVL4:
 467:Core/Src/main.c **** }
 188              		.loc 1 467 1 is_stmt 0 view .LVU61
 189 007e 0CB0     		add	sp, sp, #48
 190              	.LCFI3:
 191              		.cfi_def_cfa_offset 8
 192              		@ sp needed
 193 0080 10BD     		pop	{r4, pc}
 194              	.L8:
 195 0082 00BF     		.align	2
 196              	.L7:
 197 0084 00000000 		.word	.LANCHOR2
 198 0088 40787D01 		.word	25000000
 199 008c 80C8B308 		.word	146000000
 200              		.cfi_endproc
 201              	.LFE71:
 203              		.section	.rodata.read_back_config.str1.4,"aMS",%progbits,1
 204              		.align	2
 205              	.LC3:
 206 0000 0A0D436F 		.ascii	"\012\015Config: %x\000"
 206      6E666967 
 206      3A202578 
 206      00
 207 000d 000000   		.align	2
 208              	.LC4:
 209 0010 0A0D456E 		.ascii	"\012\015Enabled Data Pipes: %x\000"
 209      61626C65 
 209      64204461 
 209      74612050 
 209      69706573 
 210 0029 000000   		.align	2
 211              	.LC5:
 212 002c 0A0D5365 		.ascii	"\012\015Setup Retry: %x\000"
 212      74757020 
 212      52657472 
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 13


 212      793A2025 
 212      7800
 213 003e 0000     		.align	2
 214              	.LC6:
 215 0040 0A0D5246 		.ascii	"\012\015RF Channel: %x\000"
 215      20436861 
 215      6E6E656C 
 215      3A202578 
 215      00
 216 0051 000000   		.align	2
 217              	.LC7:
 218 0054 0A0D5246 		.ascii	"\012\015RF Setup: %x\000"
 218      20536574 
 218      75703A20 
 218      257800
 219 0063 00       		.align	2
 220              	.LC8:
 221 0064 0A0D5258 		.ascii	"\012\015RX Address High: %lx\012\015RX Address Low:"
 221      20416464 
 221      72657373 
 221      20486967 
 221      683A2025 
 222 008b 20256C78 		.ascii	" %lx\000"
 222      00
 223              		.align	2
 224              	.LC9:
 225 0090 0A0D5258 		.ascii	"\012\015RX_PW_P0: %x\000"
 225      5F50575F 
 225      50303A20 
 225      257800
 226 009f 00       		.align	2
 227              	.LC10:
 228 00a0 0A0D4665 		.ascii	"\012\015Feature: %x\000"
 228      61747572 
 228      653A2025 
 228      7800
 229              		.section	.text.read_back_config,"ax",%progbits
 230              		.align	1
 231              		.global	read_back_config
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 236              	read_back_config:
 237              	.LFB72:
 468:Core/Src/main.c **** 
 469:Core/Src/main.c **** void read_back_config(void)
 470:Core/Src/main.c **** {
 238              		.loc 1 470 1 is_stmt 1 view -0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 64
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 243              	.LCFI4:
 244              		.cfi_def_cfa_offset 28
 245              		.cfi_offset 4, -28
 246              		.cfi_offset 5, -24
 247              		.cfi_offset 6, -20
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 14


 248              		.cfi_offset 7, -16
 249              		.cfi_offset 8, -12
 250              		.cfi_offset 9, -8
 251              		.cfi_offset 14, -4
 252 0004 93B0     		sub	sp, sp, #76
 253              	.LCFI5:
 254              		.cfi_def_cfa_offset 104
 471:Core/Src/main.c ****   uint8_t rx_buffer[RX_BUF_SZ_BYTES] = {0};
 255              		.loc 1 471 3 view .LVU63
 256              		.loc 1 471 11 is_stmt 0 view .LVU64
 257 0006 0024     		movs	r4, #0
 258 0008 0294     		str	r4, [sp, #8]
 259 000a 3C22     		movs	r2, #60
 260 000c 2146     		mov	r1, r4
 261 000e 03A8     		add	r0, sp, #12
 262 0010 FFF7FEFF 		bl	memset
 263              	.LVL5:
 472:Core/Src/main.c **** 
 473:Core/Src/main.c ****   tx_rx_spi_cmd(&hspi2, R_REGISTER(CONFIG_REGISTER), NULL, 0, rx_buffer, 1);
 264              		.loc 1 473 3 is_stmt 1 view .LVU65
 265 0014 504F     		ldr	r7, .L11
 266 0016 4FF00108 		mov	r8, #1
 267 001a CDF80480 		str	r8, [sp, #4]
 268 001e 02AD     		add	r5, sp, #8
 269 0020 0095     		str	r5, [sp]
 270 0022 2346     		mov	r3, r4
 271 0024 2246     		mov	r2, r4
 272 0026 2146     		mov	r1, r4
 273 0028 3846     		mov	r0, r7
 274 002a FFF7FEFF 		bl	tx_rx_spi_cmd
 275              	.LVL6:
 474:Core/Src/main.c ****   uint8_t config = rx_buffer[0];
 276              		.loc 1 474 3 view .LVU66
 475:Core/Src/main.c ****   printf("\n\rConfig: %x", config);
 277              		.loc 1 475 3 view .LVU67
 278 002e 9DF80810 		ldrb	r1, [sp, #8]	@ zero_extendqisi2
 279 0032 4A48     		ldr	r0, .L11+4
 280 0034 FFF7FEFF 		bl	printf
 281              	.LVL7:
 476:Core/Src/main.c ****   memset(&rx_buffer, 0, sizeof(rx_buffer));
 282              		.loc 1 476 3 view .LVU68
 283 0038 4026     		movs	r6, #64
 284 003a 3246     		mov	r2, r6
 285 003c 2146     		mov	r1, r4
 286 003e 2846     		mov	r0, r5
 287 0040 FFF7FEFF 		bl	memset
 288              	.LVL8:
 477:Core/Src/main.c **** 
 478:Core/Src/main.c ****   tx_rx_spi_cmd(&hspi2, R_REGISTER(EN_RXADDR), NULL, 0, rx_buffer, 1);
 289              		.loc 1 478 3 view .LVU69
 290 0044 CDF80480 		str	r8, [sp, #4]
 291 0048 0095     		str	r5, [sp]
 292 004a 2346     		mov	r3, r4
 293 004c 2246     		mov	r2, r4
 294 004e 0221     		movs	r1, #2
 295 0050 3846     		mov	r0, r7
 296 0052 FFF7FEFF 		bl	tx_rx_spi_cmd
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 15


 297              	.LVL9:
 479:Core/Src/main.c ****   uint8_t endp = rx_buffer[0];
 298              		.loc 1 479 3 view .LVU70
 480:Core/Src/main.c ****   printf("\n\rEnabled Data Pipes: %x", endp);
 299              		.loc 1 480 3 view .LVU71
 300 0056 9DF80810 		ldrb	r1, [sp, #8]	@ zero_extendqisi2
 301 005a 4148     		ldr	r0, .L11+8
 302 005c FFF7FEFF 		bl	printf
 303              	.LVL10:
 481:Core/Src/main.c ****   memset(&rx_buffer, 0, sizeof(rx_buffer));
 304              		.loc 1 481 3 view .LVU72
 305 0060 3246     		mov	r2, r6
 306 0062 2146     		mov	r1, r4
 307 0064 2846     		mov	r0, r5
 308 0066 FFF7FEFF 		bl	memset
 309              	.LVL11:
 482:Core/Src/main.c **** 
 483:Core/Src/main.c ****   tx_rx_spi_cmd(&hspi2, R_REGISTER(SETUP_RETR), NULL, 0, rx_buffer, 1);
 310              		.loc 1 483 3 view .LVU73
 311 006a CDF80480 		str	r8, [sp, #4]
 312 006e 0095     		str	r5, [sp]
 313 0070 2346     		mov	r3, r4
 314 0072 2246     		mov	r2, r4
 315 0074 0421     		movs	r1, #4
 316 0076 3846     		mov	r0, r7
 317 0078 FFF7FEFF 		bl	tx_rx_spi_cmd
 318              	.LVL12:
 484:Core/Src/main.c ****   uint8_t setup_retr = rx_buffer[0];
 319              		.loc 1 484 3 view .LVU74
 485:Core/Src/main.c ****   printf("\n\rSetup Retry: %x", setup_retr);
 320              		.loc 1 485 3 view .LVU75
 321 007c 9DF80810 		ldrb	r1, [sp, #8]	@ zero_extendqisi2
 322 0080 3848     		ldr	r0, .L11+12
 323 0082 FFF7FEFF 		bl	printf
 324              	.LVL13:
 486:Core/Src/main.c ****   memset(&rx_buffer, 0, sizeof(rx_buffer));
 325              		.loc 1 486 3 view .LVU76
 326 0086 3246     		mov	r2, r6
 327 0088 2146     		mov	r1, r4
 328 008a 2846     		mov	r0, r5
 329 008c FFF7FEFF 		bl	memset
 330              	.LVL14:
 487:Core/Src/main.c **** 
 488:Core/Src/main.c ****   tx_rx_spi_cmd(&hspi2, R_REGISTER(RF_CH), NULL, 0, rx_buffer, 1);
 331              		.loc 1 488 3 view .LVU77
 332 0090 CDF80480 		str	r8, [sp, #4]
 333 0094 0095     		str	r5, [sp]
 334 0096 2346     		mov	r3, r4
 335 0098 2246     		mov	r2, r4
 336 009a 0521     		movs	r1, #5
 337 009c 3846     		mov	r0, r7
 338 009e FFF7FEFF 		bl	tx_rx_spi_cmd
 339              	.LVL15:
 489:Core/Src/main.c ****   uint8_t rfch = rx_buffer[0];
 340              		.loc 1 489 3 view .LVU78
 490:Core/Src/main.c ****   printf("\n\rRF Channel: %x", rfch);
 341              		.loc 1 490 3 view .LVU79
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 16


 342 00a2 9DF80810 		ldrb	r1, [sp, #8]	@ zero_extendqisi2
 343 00a6 3048     		ldr	r0, .L11+16
 344 00a8 FFF7FEFF 		bl	printf
 345              	.LVL16:
 491:Core/Src/main.c ****   memset(&rx_buffer, 0, sizeof(rx_buffer));
 346              		.loc 1 491 3 view .LVU80
 347 00ac 3246     		mov	r2, r6
 348 00ae 2146     		mov	r1, r4
 349 00b0 2846     		mov	r0, r5
 350 00b2 FFF7FEFF 		bl	memset
 351              	.LVL17:
 492:Core/Src/main.c **** 
 493:Core/Src/main.c ****   tx_rx_spi_cmd(&hspi2, R_REGISTER(RF_SETUP), NULL, 0, rx_buffer, 1);
 352              		.loc 1 493 3 view .LVU81
 353 00b6 CDF80480 		str	r8, [sp, #4]
 354 00ba 0095     		str	r5, [sp]
 355 00bc 2346     		mov	r3, r4
 356 00be 2246     		mov	r2, r4
 357 00c0 0621     		movs	r1, #6
 358 00c2 3846     		mov	r0, r7
 359 00c4 FFF7FEFF 		bl	tx_rx_spi_cmd
 360              	.LVL18:
 494:Core/Src/main.c ****   uint8_t rfsetup = rx_buffer[0];
 361              		.loc 1 494 3 view .LVU82
 495:Core/Src/main.c ****   printf("\n\rRF Setup: %x", rfsetup);
 362              		.loc 1 495 3 view .LVU83
 363 00c8 9DF80810 		ldrb	r1, [sp, #8]	@ zero_extendqisi2
 364 00cc 2748     		ldr	r0, .L11+20
 365 00ce FFF7FEFF 		bl	printf
 366              	.LVL19:
 496:Core/Src/main.c ****   memset(&rx_buffer, 0, sizeof(rx_buffer));
 367              		.loc 1 496 3 view .LVU84
 368 00d2 3246     		mov	r2, r6
 369 00d4 2146     		mov	r1, r4
 370 00d6 2846     		mov	r0, r5
 371 00d8 FFF7FEFF 		bl	memset
 372              	.LVL20:
 497:Core/Src/main.c **** 
 498:Core/Src/main.c ****   tx_rx_spi_cmd(&hspi2, R_REGISTER(RX_ADDR_P0), NULL, 0, rx_buffer, 5);
 373              		.loc 1 498 3 view .LVU85
 374 00dc 4FF00509 		mov	r9, #5
 375 00e0 CDF80490 		str	r9, [sp, #4]
 376 00e4 0095     		str	r5, [sp]
 377 00e6 2346     		mov	r3, r4
 378 00e8 2246     		mov	r2, r4
 379 00ea 0A21     		movs	r1, #10
 380 00ec 3846     		mov	r0, r7
 381 00ee FFF7FEFF 		bl	tx_rx_spi_cmd
 382              	.LVL21:
 499:Core/Src/main.c ****   uint32_t rx_addr_p0_hi = *((uint32_t*)rx_buffer);
 383              		.loc 1 499 3 view .LVU86
 500:Core/Src/main.c ****   uint32_t rx_addr_p0_lo = *((uint32_t*)rx_buffer + 1);
 384              		.loc 1 500 3 view .LVU87
 501:Core/Src/main.c ****   printf("\n\rRX Address High: %lx\n\rRX Address Low: %lx", rx_addr_p0_hi, rx_addr_p0_lo);
 385              		.loc 1 501 3 view .LVU88
 386 00f2 039A     		ldr	r2, [sp, #12]
 387 00f4 0299     		ldr	r1, [sp, #8]
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 17


 388 00f6 1E48     		ldr	r0, .L11+24
 389 00f8 FFF7FEFF 		bl	printf
 390              	.LVL22:
 502:Core/Src/main.c ****   memset(&rx_buffer, 0, sizeof(rx_buffer));
 391              		.loc 1 502 3 view .LVU89
 392 00fc 3246     		mov	r2, r6
 393 00fe 2146     		mov	r1, r4
 394 0100 2846     		mov	r0, r5
 395 0102 FFF7FEFF 		bl	memset
 396              	.LVL23:
 503:Core/Src/main.c **** 
 504:Core/Src/main.c ****   tx_rx_spi_cmd(&hspi2, R_REGISTER(RX_PW_P0), NULL, 0, rx_buffer, 5);
 397              		.loc 1 504 3 view .LVU90
 398 0106 CDF80490 		str	r9, [sp, #4]
 399 010a 0095     		str	r5, [sp]
 400 010c 2346     		mov	r3, r4
 401 010e 2246     		mov	r2, r4
 402 0110 1121     		movs	r1, #17
 403 0112 3846     		mov	r0, r7
 404 0114 FFF7FEFF 		bl	tx_rx_spi_cmd
 405              	.LVL24:
 505:Core/Src/main.c ****   uint8_t rx_pw_p0 = rx_buffer[0];
 406              		.loc 1 505 3 view .LVU91
 506:Core/Src/main.c ****   printf("\n\rRX_PW_P0: %x", rx_pw_p0);
 407              		.loc 1 506 3 view .LVU92
 408 0118 9DF80810 		ldrb	r1, [sp, #8]	@ zero_extendqisi2
 409 011c 1548     		ldr	r0, .L11+28
 410 011e FFF7FEFF 		bl	printf
 411              	.LVL25:
 507:Core/Src/main.c ****   memset(&rx_buffer, 0, sizeof(rx_buffer));
 412              		.loc 1 507 3 view .LVU93
 413 0122 3246     		mov	r2, r6
 414 0124 2146     		mov	r1, r4
 415 0126 2846     		mov	r0, r5
 416 0128 FFF7FEFF 		bl	memset
 417              	.LVL26:
 508:Core/Src/main.c **** 
 509:Core/Src/main.c ****   tx_rx_spi_cmd(&hspi2, R_REGISTER(FEATURE), NULL, 0, rx_buffer, 1);
 418              		.loc 1 509 3 view .LVU94
 419 012c CDF80480 		str	r8, [sp, #4]
 420 0130 0095     		str	r5, [sp]
 421 0132 2346     		mov	r3, r4
 422 0134 2246     		mov	r2, r4
 423 0136 1D21     		movs	r1, #29
 424 0138 3846     		mov	r0, r7
 425 013a FFF7FEFF 		bl	tx_rx_spi_cmd
 426              	.LVL27:
 510:Core/Src/main.c ****   uint8_t feature = rx_buffer[0];
 427              		.loc 1 510 3 view .LVU95
 511:Core/Src/main.c ****   printf("\n\rFeature: %x", feature);
 428              		.loc 1 511 3 view .LVU96
 429 013e 9DF80810 		ldrb	r1, [sp, #8]	@ zero_extendqisi2
 430 0142 0D48     		ldr	r0, .L11+32
 431 0144 FFF7FEFF 		bl	printf
 432              	.LVL28:
 512:Core/Src/main.c ****   memset(&rx_buffer, 0, sizeof(rx_buffer));
 433              		.loc 1 512 3 view .LVU97
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 18


 434 0148 3246     		mov	r2, r6
 435 014a 2146     		mov	r1, r4
 436 014c 2846     		mov	r0, r5
 437 014e FFF7FEFF 		bl	memset
 438              	.LVL29:
 513:Core/Src/main.c **** }
 439              		.loc 1 513 1 is_stmt 0 view .LVU98
 440 0152 13B0     		add	sp, sp, #76
 441              	.LCFI6:
 442              		.cfi_def_cfa_offset 28
 443              		@ sp needed
 444 0154 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 445              	.L12:
 446              		.align	2
 447              	.L11:
 448 0158 00000000 		.word	hspi2
 449 015c 00000000 		.word	.LC3
 450 0160 10000000 		.word	.LC4
 451 0164 2C000000 		.word	.LC5
 452 0168 40000000 		.word	.LC6
 453 016c 54000000 		.word	.LC7
 454 0170 64000000 		.word	.LC8
 455 0174 90000000 		.word	.LC9
 456 0178 A0000000 		.word	.LC10
 457              		.cfi_endproc
 458              	.LFE72:
 460              		.section	.text.__io_putchar,"ax",%progbits
 461              		.align	1
 462              		.global	__io_putchar
 463              		.syntax unified
 464              		.thumb
 465              		.thumb_func
 467              	__io_putchar:
 468              	.LVL30:
 469              	.LFB73:
 514:Core/Src/main.c **** 
 515:Core/Src/main.c **** #ifdef __GNUC__
 516:Core/Src/main.c ****   /* With GCC, small printf (option LD Linker->Libraries->Small printf
 517:Core/Src/main.c ****      set to 'Yes') calls __io_putchar() */
 518:Core/Src/main.c **** int __io_putchar(int ch)
 519:Core/Src/main.c **** #else
 520:Core/Src/main.c **** int fputc(int ch, FILE *f)
 521:Core/Src/main.c **** #endif /* __GNUC__ */
 522:Core/Src/main.c **** {
 470              		.loc 1 522 1 is_stmt 1 view -0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 8
 473              		@ frame_needed = 0, uses_anonymous_args = 0
 474              		.loc 1 522 1 is_stmt 0 view .LVU100
 475 0000 00B5     		push	{lr}
 476              	.LCFI7:
 477              		.cfi_def_cfa_offset 4
 478              		.cfi_offset 14, -4
 479 0002 83B0     		sub	sp, sp, #12
 480              	.LCFI8:
 481              		.cfi_def_cfa_offset 16
 482 0004 0190     		str	r0, [sp, #4]
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 19


 523:Core/Src/main.c ****   /* Place your implementation of fputc here */
 524:Core/Src/main.c ****   /* e.g. write a character to the UART3 and Loop until the end of transmission */
 525:Core/Src/main.c ****   HAL_UART_Transmit(&huart3, (uint8_t *)&ch, 1, HAL_MAX_DELAY);
 483              		.loc 1 525 3 is_stmt 1 view .LVU101
 484 0006 4FF0FF33 		mov	r3, #-1
 485 000a 0122     		movs	r2, #1
 486 000c 01A9     		add	r1, sp, #4
 487 000e 0348     		ldr	r0, .L15
 488              	.LVL31:
 489              		.loc 1 525 3 is_stmt 0 view .LVU102
 490 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 491              	.LVL32:
 526:Core/Src/main.c ****   return ch;
 492              		.loc 1 526 3 is_stmt 1 view .LVU103
 527:Core/Src/main.c **** }
 493              		.loc 1 527 1 is_stmt 0 view .LVU104
 494 0014 0198     		ldr	r0, [sp, #4]
 495 0016 03B0     		add	sp, sp, #12
 496              	.LCFI9:
 497              		.cfi_def_cfa_offset 4
 498              		@ sp needed
 499 0018 5DF804FB 		ldr	pc, [sp], #4
 500              	.L16:
 501              		.align	2
 502              	.L15:
 503 001c 00000000 		.word	huart3
 504              		.cfi_endproc
 505              	.LFE73:
 507              		.section	.text.Error_Handler,"ax",%progbits
 508              		.align	1
 509              		.global	Error_Handler
 510              		.syntax unified
 511              		.thumb
 512              		.thumb_func
 514              	Error_Handler:
 515              	.LFB74:
 528:Core/Src/main.c **** 
 529:Core/Src/main.c **** /* USER CODE END 4 */
 530:Core/Src/main.c **** 
 531:Core/Src/main.c **** /**
 532:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 533:Core/Src/main.c ****   * @retval None
 534:Core/Src/main.c ****   */
 535:Core/Src/main.c **** void Error_Handler(void)
 536:Core/Src/main.c **** {
 516              		.loc 1 536 1 is_stmt 1 view -0
 517              		.cfi_startproc
 518              		@ Volatile: function does not return.
 519              		@ args = 0, pretend = 0, frame = 0
 520              		@ frame_needed = 0, uses_anonymous_args = 0
 521              		@ link register save eliminated.
 537:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 538:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 539:Core/Src/main.c ****   __disable_irq();
 522              		.loc 1 539 3 view .LVU106
 523              	.LBB4:
 524              	.LBI4:
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 20


 525              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 21


  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 22


 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 526              		.loc 2 140 27 view .LVU107
 527              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 528              		.loc 2 142 3 view .LVU108
 529              		.syntax unified
 530              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 531 0000 72B6     		cpsid i
 532              	@ 0 "" 2
 533              		.thumb
 534              		.syntax unified
 535              	.L18:
 536              	.LBE5:
 537              	.LBE4:
 540:Core/Src/main.c ****   while (1)
 538              		.loc 1 540 3 discriminator 1 view .LVU109
 541:Core/Src/main.c ****   {
 542:Core/Src/main.c ****   }
 539              		.loc 1 542 3 discriminator 1 view .LVU110
 540:Core/Src/main.c ****   while (1)
 540              		.loc 1 540 9 discriminator 1 view .LVU111
 541 0002 FEE7     		b	.L18
 542              		.cfi_endproc
 543              	.LFE74:
 545              		.section	.text.SystemClock_Config,"ax",%progbits
 546              		.align	1
 547              		.global	SystemClock_Config
 548              		.syntax unified
 549              		.thumb
 550              		.thumb_func
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 23


 552              	SystemClock_Config:
 553              	.LFB69:
 392:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 554              		.loc 1 392 1 view -0
 555              		.cfi_startproc
 556              		@ args = 0, pretend = 0, frame = 64
 557              		@ frame_needed = 0, uses_anonymous_args = 0
 558 0000 00B5     		push	{lr}
 559              	.LCFI10:
 560              		.cfi_def_cfa_offset 4
 561              		.cfi_offset 14, -4
 562 0002 91B0     		sub	sp, sp, #68
 563              	.LCFI11:
 564              		.cfi_def_cfa_offset 72
 393:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 565              		.loc 1 393 3 view .LVU113
 393:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 566              		.loc 1 393 22 is_stmt 0 view .LVU114
 567 0004 2822     		movs	r2, #40
 568 0006 0021     		movs	r1, #0
 569 0008 06A8     		add	r0, sp, #24
 570 000a FFF7FEFF 		bl	memset
 571              	.LVL33:
 394:Core/Src/main.c **** 
 572              		.loc 1 394 3 is_stmt 1 view .LVU115
 394:Core/Src/main.c **** 
 573              		.loc 1 394 22 is_stmt 0 view .LVU116
 574 000e 0023     		movs	r3, #0
 575 0010 0193     		str	r3, [sp, #4]
 576 0012 0293     		str	r3, [sp, #8]
 577 0014 0393     		str	r3, [sp, #12]
 578 0016 0493     		str	r3, [sp, #16]
 579 0018 0593     		str	r3, [sp, #20]
 399:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 580              		.loc 1 399 3 is_stmt 1 view .LVU117
 399:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 581              		.loc 1 399 36 is_stmt 0 view .LVU118
 582 001a 0122     		movs	r2, #1
 583 001c 0692     		str	r2, [sp, #24]
 400:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV2;
 584              		.loc 1 400 3 is_stmt 1 view .LVU119
 400:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV2;
 585              		.loc 1 400 30 is_stmt 0 view .LVU120
 586 001e 4FF48033 		mov	r3, #65536
 587 0022 0793     		str	r3, [sp, #28]
 401:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 588              		.loc 1 401 3 is_stmt 1 view .LVU121
 401:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 589              		.loc 1 401 36 is_stmt 0 view .LVU122
 590 0024 4FF40031 		mov	r1, #131072
 591 0028 0891     		str	r1, [sp, #32]
 402:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 592              		.loc 1 402 3 is_stmt 1 view .LVU123
 402:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 593              		.loc 1 402 30 is_stmt 0 view .LVU124
 594 002a 0A92     		str	r2, [sp, #40]
 403:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 24


 595              		.loc 1 403 3 is_stmt 1 view .LVU125
 403:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 596              		.loc 1 403 34 is_stmt 0 view .LVU126
 597 002c 0222     		movs	r2, #2
 598 002e 0D92     		str	r2, [sp, #52]
 404:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 599              		.loc 1 404 3 is_stmt 1 view .LVU127
 404:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 600              		.loc 1 404 35 is_stmt 0 view .LVU128
 601 0030 0E93     		str	r3, [sp, #56]
 405:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 602              		.loc 1 405 3 is_stmt 1 view .LVU129
 405:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 603              		.loc 1 405 32 is_stmt 0 view .LVU130
 604 0032 4FF4E013 		mov	r3, #1835008
 605 0036 0F93     		str	r3, [sp, #60]
 406:Core/Src/main.c ****   {
 606              		.loc 1 406 3 is_stmt 1 view .LVU131
 406:Core/Src/main.c ****   {
 607              		.loc 1 406 7 is_stmt 0 view .LVU132
 608 0038 06A8     		add	r0, sp, #24
 609 003a FFF7FEFF 		bl	HAL_RCC_OscConfig
 610              	.LVL34:
 406:Core/Src/main.c ****   {
 611              		.loc 1 406 6 view .LVU133
 612 003e 80B9     		cbnz	r0, .L23
 413:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 613              		.loc 1 413 3 is_stmt 1 view .LVU134
 413:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 614              		.loc 1 413 31 is_stmt 0 view .LVU135
 615 0040 0F23     		movs	r3, #15
 616 0042 0193     		str	r3, [sp, #4]
 415:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 617              		.loc 1 415 3 is_stmt 1 view .LVU136
 415:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 618              		.loc 1 415 34 is_stmt 0 view .LVU137
 619 0044 0221     		movs	r1, #2
 620 0046 0291     		str	r1, [sp, #8]
 416:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 621              		.loc 1 416 3 is_stmt 1 view .LVU138
 416:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 622              		.loc 1 416 35 is_stmt 0 view .LVU139
 623 0048 0023     		movs	r3, #0
 624 004a 0393     		str	r3, [sp, #12]
 417:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 625              		.loc 1 417 3 is_stmt 1 view .LVU140
 417:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 626              		.loc 1 417 36 is_stmt 0 view .LVU141
 627 004c 4FF48062 		mov	r2, #1024
 628 0050 0492     		str	r2, [sp, #16]
 418:Core/Src/main.c **** 
 629              		.loc 1 418 3 is_stmt 1 view .LVU142
 418:Core/Src/main.c **** 
 630              		.loc 1 418 36 is_stmt 0 view .LVU143
 631 0052 0593     		str	r3, [sp, #20]
 420:Core/Src/main.c ****   {
 632              		.loc 1 420 3 is_stmt 1 view .LVU144
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 25


 420:Core/Src/main.c ****   {
 633              		.loc 1 420 7 is_stmt 0 view .LVU145
 634 0054 01A8     		add	r0, sp, #4
 635 0056 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 636              	.LVL35:
 420:Core/Src/main.c ****   {
 637              		.loc 1 420 6 view .LVU146
 638 005a 20B9     		cbnz	r0, .L24
 424:Core/Src/main.c **** 
 639              		.loc 1 424 1 view .LVU147
 640 005c 11B0     		add	sp, sp, #68
 641              	.LCFI12:
 642              		.cfi_remember_state
 643              		.cfi_def_cfa_offset 4
 644              		@ sp needed
 645 005e 5DF804FB 		ldr	pc, [sp], #4
 646              	.L23:
 647              	.LCFI13:
 648              		.cfi_restore_state
 408:Core/Src/main.c ****   }
 649              		.loc 1 408 5 is_stmt 1 view .LVU148
 650 0062 FFF7FEFF 		bl	Error_Handler
 651              	.LVL36:
 652              	.L24:
 422:Core/Src/main.c ****   }
 653              		.loc 1 422 5 view .LVU149
 654 0066 FFF7FEFF 		bl	Error_Handler
 655              	.LVL37:
 656              		.cfi_endproc
 657              	.LFE69:
 659              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 660              		.align	2
 661              	.LC11:
 662 0000 0A0D5761 		.ascii	"\012\015Waiting for CAN\000"
 662      6974696E 
 662      6720666F 
 662      72204341 
 662      4E00
 663 0012 0000     		.align	2
 664              	.LC12:
 665 0014 0A0D4341 		.ascii	"\012\015CAN received\000"
 665      4E207265 
 665      63656976 
 665      656400
 666 0023 00       		.align	2
 667              	.LC13:
 668 0024 0A0D5246 		.ascii	"\012\015RF power ON\000"
 668      20706F77 
 668      6572204F 
 668      4E00
 669 0032 0000     		.align	2
 670              	.LC14:
 671 0034 0A0D5761 		.ascii	"\012\015Waiting for NRF\000"
 671      6974696E 
 671      6720666F 
 671      72204E52 
 671      4600
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 26


 672 0046 0000     		.align	2
 673              	.LC15:
 674 0048 0A0D5246 		.ascii	"\012\015RF power OFF\000"
 674      20706F77 
 674      6572204F 
 674      464600
 675 0057 00       		.align	2
 676              	.LC16:
 677 0058 0A0D4E52 		.ascii	"\012\015NRF received data\000"
 677      46207265 
 677      63656976 
 677      65642064 
 677      61746100 
 678              		.align	2
 679              	.LC17:
 680 006c 5B6D3A20 		.ascii	"[m: %d] [u: %d] Received message with id = 0x%04x, "
 680      25645D20 
 680      5B753A20 
 680      25645D20 
 680      52656365 
 681 009f 6E6F6465 		.ascii	"node_id = 0x%02x! pressure = %d, temp = %d\015\012\000"
 681      5F696420 
 681      3D203078 
 681      25303278 
 681      21207072 
 682              		.align	2
 683              	.LC18:
 684 00cc 0A0D4552 		.ascii	"\012\015ERROR: Timeout\000"
 684      524F523A 
 684      2054696D 
 684      656F7574 
 684      00
 685 00dd 000000   		.align	2
 686              	.LC19:
 687 00e0 0A0D5365 		.ascii	"\012\015Sending back PTN RESPONSE\000"
 687      6E64696E 
 687      67206261 
 687      636B2050 
 687      544E2052 
 688              		.section	.text.main,"ax",%progbits
 689              		.align	1
 690              		.global	main
 691              		.syntax unified
 692              		.thumb
 693              		.thumb_func
 695              	main:
 696              	.LFB68:
  96:Core/Src/main.c **** 
 697              		.loc 1 96 1 view -0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 240
 700              		@ frame_needed = 0, uses_anonymous_args = 0
 701 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 702              	.LCFI14:
 703              		.cfi_def_cfa_offset 36
 704              		.cfi_offset 4, -36
 705              		.cfi_offset 5, -32
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 27


 706              		.cfi_offset 6, -28
 707              		.cfi_offset 7, -24
 708              		.cfi_offset 8, -20
 709              		.cfi_offset 9, -16
 710              		.cfi_offset 10, -12
 711              		.cfi_offset 11, -8
 712              		.cfi_offset 14, -4
 713 0004 C1B0     		sub	sp, sp, #260
 714              	.LCFI15:
 715              		.cfi_def_cfa_offset 296
 105:Core/Src/main.c **** 
 716              		.loc 1 105 3 view .LVU151
 717 0006 FFF7FEFF 		bl	HAL_Init
 718              	.LVL38:
 110:Core/Src/main.c **** 
 719              		.loc 1 110 3 view .LVU152
 110:Core/Src/main.c **** 
 720              		.loc 1 110 11 is_stmt 0 view .LVU153
 721 000a BD4B     		ldr	r3, .L48
 722 000c 1868     		ldr	r0, [r3]
 110:Core/Src/main.c **** 
 723              		.loc 1 110 3 view .LVU154
 724 000e 0023     		movs	r3, #0
 725 0010 0222     		movs	r2, #2
 726 0012 1946     		mov	r1, r3
 727 0014 8068     		ldr	r0, [r0, #8]
 728 0016 FFF7FEFF 		bl	setvbuf
 729              	.LVL39:
 115:Core/Src/main.c **** 
 730              		.loc 1 115 3 is_stmt 1 view .LVU155
 731 001a FFF7FEFF 		bl	SystemClock_Config
 732              	.LVL40:
 122:Core/Src/main.c ****   MX_SPI1_Init();
 733              		.loc 1 122 3 view .LVU156
 734 001e FFF7FEFF 		bl	MX_GPIO_Init
 735              	.LVL41:
 123:Core/Src/main.c ****   MX_TIM2_Init();
 736              		.loc 1 123 3 view .LVU157
 737 0022 FFF7FEFF 		bl	MX_SPI1_Init
 738              	.LVL42:
 124:Core/Src/main.c ****   MX_SPI2_Init();
 739              		.loc 1 124 3 view .LVU158
 740 0026 FFF7FEFF 		bl	MX_TIM2_Init
 741              	.LVL43:
 125:Core/Src/main.c ****   MX_CAN_Init();
 742              		.loc 1 125 3 view .LVU159
 743 002a FFF7FEFF 		bl	MX_SPI2_Init
 744              	.LVL44:
 126:Core/Src/main.c ****   MX_USART3_UART_Init();
 745              		.loc 1 126 3 view .LVU160
 746 002e FFF7FEFF 		bl	MX_CAN_Init
 747              	.LVL45:
 127:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 748              		.loc 1 127 3 view .LVU161
 749 0032 FFF7FEFF 		bl	MX_USART3_UART_Init
 750              	.LVL46:
 131:Core/Src/main.c ****   HAL_GPIO_WritePin(SPI1_LD_GPIO_Port, SPI1_LD_Pin, 1);
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 28


 751              		.loc 1 131 3 view .LVU162
 752 0036 B34C     		ldr	r4, .L48+4
 753 0038 0122     		movs	r2, #1
 754 003a 1021     		movs	r1, #16
 755 003c 2046     		mov	r0, r4
 756 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 757              	.LVL47:
 132:Core/Src/main.c **** 
 758              		.loc 1 132 3 view .LVU163
 759 0042 0122     		movs	r2, #1
 760 0044 4FF48061 		mov	r1, #1024
 761 0048 2046     		mov	r0, r4
 762 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 763              	.LVL48:
 135:Core/Src/main.c ****   uint8_t paired_sn_id = SN_ID_UNPAIRED;
 764              		.loc 1 135 3 view .LVU164
 136:Core/Src/main.c **** 
 765              		.loc 1 136 3 view .LVU165
 139:Core/Src/main.c ****   if (HAL_GPIO_ReadPin(PTN_ID_Port, PTN_ID_Pin) == 1)
 766              		.loc 1 139 3 view .LVU166
 140:Core/Src/main.c ****   {
 767              		.loc 1 140 3 view .LVU167
 140:Core/Src/main.c ****   {
 768              		.loc 1 140 7 is_stmt 0 view .LVU168
 769 004e 0121     		movs	r1, #1
 770 0050 2046     		mov	r0, r4
 771 0052 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 772              	.LVL49:
 773 0056 0546     		mov	r5, r0
 140:Core/Src/main.c ****   {
 774              		.loc 1 140 6 view .LVU169
 775 0058 0128     		cmp	r0, #1
 776 005a 00D0     		beq	.L26
 146:Core/Src/main.c ****   }
 777              		.loc 1 146 12 view .LVU170
 778 005c 0225     		movs	r5, #2
 779              	.L26:
 780              	.LVL50:
 150:Core/Src/main.c ****   adf4350_out_altvoltage0_powerdown(1);
 781              		.loc 1 150 3 is_stmt 1 view .LVU171
 782 005e FFF7FEFF 		bl	cmd_sm_init
 783              	.LVL51:
 151:Core/Src/main.c **** 
 784              		.loc 1 151 3 view .LVU172
 785 0062 0120     		movs	r0, #1
 786 0064 FFF7FEFF 		bl	adf4350_out_altvoltage0_powerdown
 787              	.LVL52:
 154:Core/Src/main.c **** 
 788              		.loc 1 154 3 view .LVU173
 789 0068 0122     		movs	r2, #1
 790 006a 4FF48071 		mov	r1, #256
 791 006e A548     		ldr	r0, .L48+4
 792 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
 793              	.LVL53:
 157:Core/Src/main.c ****       .FilterIdHigh = (uint32_t)(PTN_REQUEST_ID << 5 | 0x0000),
 794              		.loc 1 157 3 view .LVU174
 157:Core/Src/main.c ****       .FilterIdHigh = (uint32_t)(PTN_REQUEST_ID << 5 | 0x0000),
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 29


 795              		.loc 1 157 21 is_stmt 0 view .LVU175
 796 0074 A44F     		ldr	r7, .L48+8
 797 0076 36AC     		add	r4, sp, #216
 798 0078 3E46     		mov	r6, r7
 799 007a 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 800 007c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 801 007e 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 802 0080 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 803 0082 96E80300 		ldm	r6, {r0, r1}
 804 0086 84E80300 		stm	r4, {r0, r1}
 170:Core/Src/main.c **** 
 805              		.loc 1 170 3 is_stmt 1 view .LVU176
 806 008a A04C     		ldr	r4, .L48+12
 807 008c 36A9     		add	r1, sp, #216
 808 008e 2046     		mov	r0, r4
 809 0090 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 810              	.LVL54:
 172:Core/Src/main.c **** 
 811              		.loc 1 172 3 view .LVU177
 812 0094 2046     		mov	r0, r4
 813 0096 FFF7FEFF 		bl	HAL_CAN_Start
 814              	.LVL55:
 174:Core/Src/main.c ****       .StdId = PTN_RESPONSE_ID,
 815              		.loc 1 174 3 view .LVU178
 174:Core/Src/main.c ****       .StdId = PTN_RESPONSE_ID,
 816              		.loc 1 174 23 is_stmt 0 view .LVU179
 817 009a 30AC     		add	r4, sp, #192
 818 009c 07F12806 		add	r6, r7, #40
 819 00a0 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 820 00a2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 821 00a4 96E80300 		ldm	r6, {r0, r1}
 822 00a8 84E80300 		stm	r4, {r0, r1}
 183:Core/Src/main.c ****   uint8_t can_rx_payload[CAN_MSG_FRAME_LEN_BYTES] = {0};
 823              		.loc 1 183 3 is_stmt 1 view .LVU180
 183:Core/Src/main.c ****   uint8_t can_rx_payload[CAN_MSG_FRAME_LEN_BYTES] = {0};
 824              		.loc 1 183 11 is_stmt 0 view .LVU181
 825 00ac 0026     		movs	r6, #0
 826 00ae 2E96     		str	r6, [sp, #184]
 827 00b0 2F96     		str	r6, [sp, #188]
 184:Core/Src/main.c **** 
 828              		.loc 1 184 3 is_stmt 1 view .LVU182
 184:Core/Src/main.c **** 
 829              		.loc 1 184 11 is_stmt 0 view .LVU183
 830 00b2 2C96     		str	r6, [sp, #176]
 831 00b4 2D96     		str	r6, [sp, #180]
 186:Core/Src/main.c ****   HAL_StatusTypeDef can_rx_status = HAL_OK;
 832              		.loc 1 186 3 is_stmt 1 view .LVU184
 833              	.LVL56:
 187:Core/Src/main.c **** 
 834              		.loc 1 187 3 view .LVU185
 189:Core/Src/main.c ****   uint32_t can_tx_mailbox = 0;
 835              		.loc 1 189 3 view .LVU186
 189:Core/Src/main.c ****   uint32_t can_tx_mailbox = 0;
 836              		.loc 1 189 23 is_stmt 0 view .LVU187
 837 00b6 2596     		str	r6, [sp, #148]
 838 00b8 2696     		str	r6, [sp, #152]
 839 00ba 2796     		str	r6, [sp, #156]
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 30


 840 00bc 2896     		str	r6, [sp, #160]
 841 00be 2996     		str	r6, [sp, #164]
 842 00c0 2A96     		str	r6, [sp, #168]
 843 00c2 2B96     		str	r6, [sp, #172]
 190:Core/Src/main.c **** 
 844              		.loc 1 190 3 is_stmt 1 view .LVU188
 190:Core/Src/main.c **** 
 845              		.loc 1 190 12 is_stmt 0 view .LVU189
 846 00c4 2496     		str	r6, [sp, #144]
 194:Core/Src/main.c ****   uint8_t rf_payload[PAYLOAD_SZ_BYTES] = {0};
 847              		.loc 1 194 3 is_stmt 1 view .LVU190
 194:Core/Src/main.c ****   uint8_t rf_payload[PAYLOAD_SZ_BYTES] = {0};
 848              		.loc 1 194 11 is_stmt 0 view .LVU191
 849 00c6 1C96     		str	r6, [sp, #112]
 850 00c8 1D96     		str	r6, [sp, #116]
 851 00ca 1E96     		str	r6, [sp, #120]
 852 00cc 1F96     		str	r6, [sp, #124]
 853 00ce 2096     		str	r6, [sp, #128]
 854 00d0 2196     		str	r6, [sp, #132]
 855 00d2 2296     		str	r6, [sp, #136]
 856 00d4 2396     		str	r6, [sp, #140]
 195:Core/Src/main.c **** 
 857              		.loc 1 195 3 is_stmt 1 view .LVU192
 195:Core/Src/main.c **** 
 858              		.loc 1 195 11 is_stmt 0 view .LVU193
 859 00d6 1A96     		str	r6, [sp, #104]
 860 00d8 1B96     		str	r6, [sp, #108]
 198:Core/Src/main.c ****   tx_spi_cmd(&hspi2, W_REGISTER(CONFIG_REGISTER), tx_payload, 1);
 861              		.loc 1 198 3 is_stmt 1 view .LVU194
 198:Core/Src/main.c ****   tx_spi_cmd(&hspi2, W_REGISTER(CONFIG_REGISTER), tx_payload, 1);
 862              		.loc 1 198 17 is_stmt 0 view .LVU195
 863 00da 4FF03F08 		mov	r8, #63
 864 00de 8DF87080 		strb	r8, [sp, #112]
 199:Core/Src/main.c ****   HAL_Delay(500);
 865              		.loc 1 199 3 is_stmt 1 view .LVU196
 866 00e2 8B4C     		ldr	r4, .L48+16
 867 00e4 0123     		movs	r3, #1
 868 00e6 1CAA     		add	r2, sp, #112
 869 00e8 2021     		movs	r1, #32
 870 00ea 2046     		mov	r0, r4
 871 00ec FFF7FEFF 		bl	tx_spi_cmd
 872              	.LVL57:
 200:Core/Src/main.c ****   
 873              		.loc 1 200 3 view .LVU197
 874 00f0 4FF4FA70 		mov	r0, #500
 875 00f4 FFF7FEFF 		bl	HAL_Delay
 876              	.LVL58:
 203:Core/Src/main.c ****   tx_spi_cmd(&hspi2, W_REGISTER(CONFIG_REGISTER), tx_payload, 1);
 877              		.loc 1 203 3 view .LVU198
 203:Core/Src/main.c ****   tx_spi_cmd(&hspi2, W_REGISTER(CONFIG_REGISTER), tx_payload, 1);
 878              		.loc 1 203 17 is_stmt 0 view .LVU199
 879 00f8 8DF87080 		strb	r8, [sp, #112]
 204:Core/Src/main.c **** 
 880              		.loc 1 204 3 is_stmt 1 view .LVU200
 881 00fc 0123     		movs	r3, #1
 882 00fe 1CAA     		add	r2, sp, #112
 883 0100 2021     		movs	r1, #32
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 31


 884 0102 2046     		mov	r0, r4
 885 0104 FFF7FEFF 		bl	tx_spi_cmd
 886              	.LVL59:
 207:Core/Src/main.c ****   tx_spi_cmd(&hspi2, W_REGISTER(RX_PW_P0), tx_payload, 1);
 887              		.loc 1 207 3 view .LVU201
 207:Core/Src/main.c ****   tx_spi_cmd(&hspi2, W_REGISTER(RX_PW_P0), tx_payload, 1);
 888              		.loc 1 207 17 is_stmt 0 view .LVU202
 889 0108 0823     		movs	r3, #8
 890 010a 8DF87030 		strb	r3, [sp, #112]
 208:Core/Src/main.c **** 
 891              		.loc 1 208 3 is_stmt 1 view .LVU203
 892 010e 0123     		movs	r3, #1
 893 0110 1CAA     		add	r2, sp, #112
 894 0112 3121     		movs	r1, #49
 895 0114 2046     		mov	r0, r4
 896 0116 FFF7FEFF 		bl	tx_spi_cmd
 897              	.LVL60:
 211:Core/Src/main.c ****   nrf24l01_setup_rf(&hspi2, &rf_config);
 898              		.loc 1 211 3 view .LVU204
 211:Core/Src/main.c ****   nrf24l01_setup_rf(&hspi2, &rf_config);
 899              		.loc 1 211 16 is_stmt 0 view .LVU205
 900 011a B7F84030 		ldrh	r3, [r7, #64]
 901 011e ADF86430 		strh	r3, [sp, #100]	@ movhi
 212:Core/Src/main.c **** 
 902              		.loc 1 212 3 is_stmt 1 view .LVU206
 903 0122 19A9     		add	r1, sp, #100
 904 0124 2046     		mov	r0, r4
 905 0126 FFF7FEFF 		bl	nrf24l01_setup_rf
 906              	.LVL61:
 214:Core/Src/main.c **** 
 907              		.loc 1 214 3 view .LVU207
 908 012a 3346     		mov	r3, r6
 909 012c 3246     		mov	r2, r6
 910 012e E221     		movs	r1, #226
 911 0130 2046     		mov	r0, r4
 912 0132 FFF7FEFF 		bl	tx_spi_cmd
 913              	.LVL62:
 217:Core/Src/main.c **** 
 914              		.loc 1 217 3 view .LVU208
 915 0136 FFF7FEFF 		bl	read_back_config
 916              	.LVL63:
 220:Core/Src/main.c **** 
 917              		.loc 1 220 3 view .LVU209
 136:Core/Src/main.c **** 
 918              		.loc 1 136 11 is_stmt 0 view .LVU210
 919 013a 3446     		mov	r4, r6
 135:Core/Src/main.c ****   uint8_t paired_sn_id = SN_ID_UNPAIRED;
 920              		.loc 1 135 8 view .LVU211
 921 013c B346     		mov	fp, r6
 922 013e 04E0     		b	.L39
 923              	.LVL64:
 924              	.L28:
 925              	.LBB6:
 244:Core/Src/main.c ****         {
 926              		.loc 1 244 9 is_stmt 1 view .LVU212
 244:Core/Src/main.c ****         {
 927              		.loc 1 244 12 is_stmt 0 view .LVU213
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 32


 928 0140 A942     		cmp	r1, r5
 929 0142 25D0     		beq	.L44
 930              	.LVL65:
 931              	.L29:
 379:Core/Src/main.c ****     /* USER CODE END WHILE */
 932              		.loc 1 379 5 is_stmt 1 view .LVU214
 933 0144 0120     		movs	r0, #1
 934 0146 FFF7FEFF 		bl	adf4350_out_altvoltage0_powerdown
 935              	.LVL66:
 936              	.LBE6:
 226:Core/Src/main.c ****   {
 937              		.loc 1 226 9 view .LVU215
 938              	.L39:
 226:Core/Src/main.c ****   {
 939              		.loc 1 226 3 view .LVU216
 940              	.LBB7:
 229:Core/Src/main.c **** 
 941              		.loc 1 229 5 view .LVU217
 942 014a 0120     		movs	r0, #1
 943 014c FFF7FEFF 		bl	adf4350_out_altvoltage0_powerdown
 944              	.LVL67:
 232:Core/Src/main.c ****     while(HAL_CAN_GetRxFifoFillLevel(&hcan, CAN_RX_FIFO0) <= 0);
 945              		.loc 1 232 5 view .LVU218
 946 0150 7048     		ldr	r0, .L48+20
 947 0152 FFF7FEFF 		bl	printf
 948              	.LVL68:
 233:Core/Src/main.c ****     printf("\n\rCAN received");
 949              		.loc 1 233 5 view .LVU219
 950              	.L27:
 233:Core/Src/main.c ****     printf("\n\rCAN received");
 951              		.loc 1 233 59 discriminator 1 view .LVU220
 233:Core/Src/main.c ****     printf("\n\rCAN received");
 952              		.loc 1 233 11 is_stmt 0 discriminator 1 view .LVU221
 953 0156 0021     		movs	r1, #0
 954 0158 6C48     		ldr	r0, .L48+12
 955 015a FFF7FEFF 		bl	HAL_CAN_GetRxFifoFillLevel
 956              	.LVL69:
 233:Core/Src/main.c ****     printf("\n\rCAN received");
 957              		.loc 1 233 59 discriminator 1 view .LVU222
 958 015e 0028     		cmp	r0, #0
 959 0160 F9D0     		beq	.L27
 234:Core/Src/main.c ****     can_rx_status = HAL_CAN_GetRxMessage(&hcan, CAN_RX_FIFO0, &rx_header, can_rx_payload);
 960              		.loc 1 234 5 is_stmt 1 view .LVU223
 961 0162 6D48     		ldr	r0, .L48+24
 962 0164 FFF7FEFF 		bl	printf
 963              	.LVL70:
 235:Core/Src/main.c **** 
 964              		.loc 1 235 5 view .LVU224
 235:Core/Src/main.c **** 
 965              		.loc 1 235 21 is_stmt 0 view .LVU225
 966 0168 2CAB     		add	r3, sp, #176
 967 016a 25AA     		add	r2, sp, #148
 968 016c 0021     		movs	r1, #0
 969 016e 6748     		ldr	r0, .L48+12
 970 0170 FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 971              	.LVL71:
 238:Core/Src/main.c ****     const uint16_t received_ptn_id = can_rx_payload[0];
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 33


 972              		.loc 1 238 5 is_stmt 1 view .LVU226
 239:Core/Src/main.c ****     switch (ptn_can_id)
 973              		.loc 1 239 5 view .LVU227
 239:Core/Src/main.c ****     switch (ptn_can_id)
 974              		.loc 1 239 52 is_stmt 0 view .LVU228
 975 0174 9DF8B010 		ldrb	r1, [sp, #176]	@ zero_extendqisi2
 976              	.LVL72:
 240:Core/Src/main.c ****     {
 977              		.loc 1 240 5 is_stmt 1 view .LVU229
 978 0178 BDF89430 		ldrh	r3, [sp, #148]
 979 017c 40F20112 		movw	r2, #257
 980 0180 9342     		cmp	r3, r2
 981 0182 DDD0     		beq	.L28
 982 0184 B3F5817F 		cmp	r3, #258
 983 0188 DCD1     		bne	.L29
 984 018a 0024     		movs	r4, #0
 985              	.LVL73:
 240:Core/Src/main.c ****     {
 986              		.loc 1 240 5 is_stmt 0 view .LVU230
 987 018c A346     		mov	fp, r4
 988              	.LVL74:
 240:Core/Src/main.c ****     {
 989              		.loc 1 240 5 view .LVU231
 990 018e D9E7     		b	.L29
 991              	.LVL75:
 992              	.L44:
 246:Core/Src/main.c ****         }
 993              		.loc 1 246 11 is_stmt 1 view .LVU232
 994              	.LDL1:
 267:Core/Src/main.c ****     }
 995              		.loc 1 267 7 view .LVU233
 272:Core/Src/main.c ****     adf4350_out_altvoltage0_powerdown(0);
 996              		.loc 1 272 5 view .LVU234
 997 0190 6248     		ldr	r0, .L48+28
 998 0192 FFF7FEFF 		bl	printf
 999              	.LVL76:
 273:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim2);
 1000              		.loc 1 273 5 view .LVU235
 1001 0196 0020     		movs	r0, #0
 1002 0198 FFF7FEFF 		bl	adf4350_out_altvoltage0_powerdown
 1003              	.LVL77:
 274:Core/Src/main.c **** 
 1004              		.loc 1 274 5 view .LVU236
 1005 019c 6048     		ldr	r0, .L48+32
 1006 019e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1007              	.LVL78:
 277:Core/Src/main.c ****     int num_uniq_msgs = 0;
 1008              		.loc 1 277 5 view .LVU237
 278:Core/Src/main.c ****     uint32_t prev_rand_id = 0;
 1009              		.loc 1 278 5 view .LVU238
 279:Core/Src/main.c **** 
 1010              		.loc 1 279 5 view .LVU239
 281:Core/Src/main.c ****     uint8_t rx_fifo_empty = 1;
 1011              		.loc 1 281 5 view .LVU240
 282:Core/Src/main.c ****     uint8_t fifo_status = 0;
 1012              		.loc 1 282 5 view .LVU241
 283:Core/Src/main.c ****     uint8_t rxbuffer[RX_BUF_SZ_BYTES] = {0};
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 34


 1013              		.loc 1 283 5 view .LVU242
 284:Core/Src/main.c **** 
 1014              		.loc 1 284 5 view .LVU243
 284:Core/Src/main.c **** 
 1015              		.loc 1 284 13 is_stmt 0 view .LVU244
 1016 01a2 0021     		movs	r1, #0
 1017 01a4 0991     		str	r1, [sp, #36]
 1018 01a6 3C22     		movs	r2, #60
 1019 01a8 0AA8     		add	r0, sp, #40
 1020 01aa FFF7FEFF 		bl	memset
 1021              	.LVL79:
 286:Core/Src/main.c ****     uint32_t millis_time = HAL_GetTick() - ref_time;
 1022              		.loc 1 286 5 is_stmt 1 view .LVU245
 286:Core/Src/main.c ****     uint32_t millis_time = HAL_GetTick() - ref_time;
 1023              		.loc 1 286 25 is_stmt 0 view .LVU246
 1024 01ae FFF7FEFF 		bl	HAL_GetTick
 1025              	.LVL80:
 1026 01b2 0746     		mov	r7, r0
 1027              	.LVL81:
 287:Core/Src/main.c **** 
 1028              		.loc 1 287 5 is_stmt 1 view .LVU247
 287:Core/Src/main.c **** 
 1029              		.loc 1 287 28 is_stmt 0 view .LVU248
 1030 01b4 FFF7FEFF 		bl	HAL_GetTick
 1031              	.LVL82:
 287:Core/Src/main.c **** 
 1032              		.loc 1 287 14 view .LVU249
 1033 01b8 C61B     		subs	r6, r0, r7
 1034              	.LVL83:
 291:Core/Src/main.c ****     while((!STATUS_RX_DR(nrf24l01_get_status(&hspi2))) && millis_time < NRF24L01_RX_TIMEOUT)
 1035              		.loc 1 291 5 is_stmt 1 view .LVU250
 1036 01ba 5A48     		ldr	r0, .L48+36
 1037 01bc FFF7FEFF 		bl	printf
 1038              	.LVL84:
 292:Core/Src/main.c ****     {
 1039              		.loc 1 292 5 view .LVU251
 292:Core/Src/main.c ****     {
 1040              		.loc 1 292 10 is_stmt 0 view .LVU252
 1041 01c0 02E0     		b	.L30
 1042              	.L32:
 294:Core/Src/main.c ****     }
 1043              		.loc 1 294 7 is_stmt 1 view .LVU253
 294:Core/Src/main.c ****     }
 1044              		.loc 1 294 21 is_stmt 0 view .LVU254
 1045 01c2 FFF7FEFF 		bl	HAL_GetTick
 1046              	.LVL85:
 294:Core/Src/main.c ****     }
 1047              		.loc 1 294 19 view .LVU255
 1048 01c6 C61B     		subs	r6, r0, r7
 1049              	.LVL86:
 1050              	.L30:
 292:Core/Src/main.c ****     {
 1051              		.loc 1 292 56 is_stmt 1 view .LVU256
 292:Core/Src/main.c ****     {
 1052              		.loc 1 292 13 is_stmt 0 view .LVU257
 1053 01c8 5148     		ldr	r0, .L48+16
 1054 01ca FFF7FEFF 		bl	nrf24l01_get_status
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 35


 1055              	.LVL87:
 292:Core/Src/main.c ****     {
 1056              		.loc 1 292 56 view .LVU258
 1057 01ce 10F0400F 		tst	r0, #64
 1058 01d2 03D1     		bne	.L31
 292:Core/Src/main.c ****     {
 1059              		.loc 1 292 56 discriminator 1 view .LVU259
 1060 01d4 41F28733 		movw	r3, #4999
 1061 01d8 9E42     		cmp	r6, r3
 1062 01da F2D9     		bls	.L32
 1063              	.L31:
 298:Core/Src/main.c ****     HAL_TIM_Base_Stop_IT(&htim2);
 1064              		.loc 1 298 5 is_stmt 1 view .LVU260
 1065 01dc 5248     		ldr	r0, .L48+40
 1066 01de FFF7FEFF 		bl	printf
 1067              	.LVL88:
 299:Core/Src/main.c ****     adf4350_out_altvoltage0_powerdown(1);
 1068              		.loc 1 299 5 view .LVU261
 1069 01e2 4F48     		ldr	r0, .L48+32
 1070 01e4 FFF7FEFF 		bl	HAL_TIM_Base_Stop_IT
 1071              	.LVL89:
 300:Core/Src/main.c **** 
 1072              		.loc 1 300 5 view .LVU262
 1073 01e8 0120     		movs	r0, #1
 1074 01ea FFF7FEFF 		bl	adf4350_out_altvoltage0_powerdown
 1075              	.LVL90:
 303:Core/Src/main.c ****     if (millis_time < NRF24L01_RX_TIMEOUT)
 1076              		.loc 1 303 5 view .LVU263
 303:Core/Src/main.c ****     if (millis_time < NRF24L01_RX_TIMEOUT)
 1077              		.loc 1 303 18 is_stmt 0 view .LVU264
 1078 01ee 0023     		movs	r3, #0
 1079 01f0 0793     		str	r3, [sp, #28]
 1080 01f2 0893     		str	r3, [sp, #32]
 304:Core/Src/main.c ****     {
 1081              		.loc 1 304 5 is_stmt 1 view .LVU265
 304:Core/Src/main.c ****     {
 1082              		.loc 1 304 8 is_stmt 0 view .LVU266
 1083 01f4 41F28733 		movw	r3, #4999
 1084 01f8 9E42     		cmp	r6, r3
 1085 01fa 24D9     		bls	.L45
 360:Core/Src/main.c ****       printf("\n\rERROR: Timeout");
 1086              		.loc 1 360 7 is_stmt 1 view .LVU267
 1087              	.LVL91:
 361:Core/Src/main.c ****     }
 1088              		.loc 1 361 7 view .LVU268
 1089 01fc 4B48     		ldr	r0, .L48+44
 1090 01fe FFF7FEFF 		bl	printf
 1091              	.LVL92:
 360:Core/Src/main.c ****       printf("\n\rERROR: Timeout");
 1092              		.loc 1 360 18 is_stmt 0 view .LVU269
 1093 0202 0126     		movs	r6, #1
 1094              	.LVL93:
 1095              	.L37:
 365:Core/Src/main.c ****     *((uint16_t*)can_tx_payload) = rx_msg.pressure;
 1096              		.loc 1 365 5 is_stmt 1 view .LVU270
 1097 0204 4A48     		ldr	r0, .L48+48
 1098 0206 FFF7FEFF 		bl	printf
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 36


 1099              	.LVL94:
 366:Core/Src/main.c ****     *((uint16_t*)can_tx_payload + 1) = rx_msg.temperature;
 1100              		.loc 1 366 5 view .LVU271
 366:Core/Src/main.c ****     *((uint16_t*)can_tx_payload + 1) = rx_msg.temperature;
 1101              		.loc 1 366 42 is_stmt 0 view .LVU272
 1102 020a BDF81D30 		ldrh	r3, [sp, #29]	@ unaligned
 366:Core/Src/main.c ****     *((uint16_t*)can_tx_payload + 1) = rx_msg.temperature;
 1103              		.loc 1 366 34 view .LVU273
 1104 020e ADF8B830 		strh	r3, [sp, #184]	@ movhi
 367:Core/Src/main.c ****     *((uint8_t*)can_tx_payload + 4) = ptn_id;
 1105              		.loc 1 367 5 is_stmt 1 view .LVU274
 367:Core/Src/main.c ****     *((uint8_t*)can_tx_payload + 4) = ptn_id;
 1106              		.loc 1 367 46 is_stmt 0 view .LVU275
 1107 0212 BDF91F30 		ldrsh	r3, [sp, #31]	@ unaligned
 367:Core/Src/main.c ****     *((uint8_t*)can_tx_payload + 4) = ptn_id;
 1108              		.loc 1 367 38 view .LVU276
 1109 0216 ADF8BA30 		strh	r3, [sp, #186]	@ movhi
 368:Core/Src/main.c ****     *((uint8_t*)can_tx_payload + 5) = rx_msg.node_id;
 1110              		.loc 1 368 5 is_stmt 1 view .LVU277
 368:Core/Src/main.c ****     *((uint8_t*)can_tx_payload + 5) = rx_msg.node_id;
 1111              		.loc 1 368 37 is_stmt 0 view .LVU278
 1112 021a 8DF8BC50 		strb	r5, [sp, #188]
 369:Core/Src/main.c ****     *((uint8_t*)can_tx_payload + 6) = ptn_status;
 1113              		.loc 1 369 5 is_stmt 1 view .LVU279
 369:Core/Src/main.c ****     *((uint8_t*)can_tx_payload + 6) = ptn_status;
 1114              		.loc 1 369 45 is_stmt 0 view .LVU280
 1115 021e 9DF81C30 		ldrb	r3, [sp, #28]	@ zero_extendqisi2
 369:Core/Src/main.c ****     *((uint8_t*)can_tx_payload + 6) = ptn_status;
 1116              		.loc 1 369 37 view .LVU281
 1117 0222 8DF8BD30 		strb	r3, [sp, #189]
 370:Core/Src/main.c ****     *((uint8_t*)can_tx_payload + 7) = (uint8_t)ptn_sn_paired;
 1118              		.loc 1 370 5 is_stmt 1 view .LVU282
 370:Core/Src/main.c ****     *((uint8_t*)can_tx_payload + 7) = (uint8_t)ptn_sn_paired;
 1119              		.loc 1 370 37 is_stmt 0 view .LVU283
 1120 0226 8DF8BE60 		strb	r6, [sp, #190]
 371:Core/Src/main.c **** 
 1121              		.loc 1 371 5 is_stmt 1 view .LVU284
 371:Core/Src/main.c **** 
 1122              		.loc 1 371 37 is_stmt 0 view .LVU285
 1123 022a 8DF8BFB0 		strb	fp, [sp, #191]
 373:Core/Src/main.c ****     can_tx_status = HAL_CAN_AddTxMessage(&hcan, &tx_header, can_tx_payload, &can_tx_mailbox);
 1124              		.loc 1 373 5 is_stmt 1 view .LVU286
 1125              	.L38:
 373:Core/Src/main.c ****     can_tx_status = HAL_CAN_AddTxMessage(&hcan, &tx_header, can_tx_payload, &can_tx_mailbox);
 1126              		.loc 1 373 51 discriminator 1 view .LVU287
 373:Core/Src/main.c ****     can_tx_status = HAL_CAN_AddTxMessage(&hcan, &tx_header, can_tx_payload, &can_tx_mailbox);
 1127              		.loc 1 373 12 is_stmt 0 discriminator 1 view .LVU288
 1128 022e 3748     		ldr	r0, .L48+12
 1129 0230 FFF7FEFF 		bl	HAL_CAN_GetTxMailboxesFreeLevel
 1130              	.LVL95:
 373:Core/Src/main.c ****     can_tx_status = HAL_CAN_AddTxMessage(&hcan, &tx_header, can_tx_payload, &can_tx_mailbox);
 1131              		.loc 1 373 51 discriminator 1 view .LVU289
 1132 0234 0028     		cmp	r0, #0
 1133 0236 FAD0     		beq	.L38
 374:Core/Src/main.c **** 
 1134              		.loc 1 374 5 is_stmt 1 view .LVU290
 374:Core/Src/main.c **** 
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 37


 1135              		.loc 1 374 21 is_stmt 0 view .LVU291
 1136 0238 24AB     		add	r3, sp, #144
 1137 023a 2EAA     		add	r2, sp, #184
 1138 023c 30A9     		add	r1, sp, #192
 1139 023e 3348     		ldr	r0, .L48+12
 1140 0240 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 1141              	.LVL96:
 1142 0244 7EE7     		b	.L29
 1143              	.LVL97:
 1144              	.L45:
 306:Core/Src/main.c **** 
 1145              		.loc 1 306 7 is_stmt 1 view .LVU292
 1146 0246 3B48     		ldr	r0, .L48+52
 1147 0248 FFF7FEFF 		bl	printf
 1148              	.LVL98:
 308:Core/Src/main.c **** 
 1149              		.loc 1 308 7 view .LVU293
 279:Core/Src/main.c **** 
 1150              		.loc 1 279 14 is_stmt 0 view .LVU294
 1151 024c 4FF00008 		mov	r8, #0
 278:Core/Src/main.c ****     uint32_t prev_rand_id = 0;
 1152              		.loc 1 278 9 view .LVU295
 1153 0250 C146     		mov	r9, r8
 277:Core/Src/main.c ****     int num_uniq_msgs = 0;
 1154              		.loc 1 277 9 view .LVU296
 1155 0252 4646     		mov	r6, r8
 1156              	.LVL99:
 277:Core/Src/main.c ****     int num_uniq_msgs = 0;
 1157              		.loc 1 277 9 view .LVU297
 1158 0254 0595     		str	r5, [sp, #20]
 1159 0256 A246     		mov	r10, r4
 1160 0258 2BE0     		b	.L35
 1161              	.LVL100:
 1162              	.L34:
 326:Core/Src/main.c ****             num_rx_msgs, num_uniq_msgs, rx_msg.msg_id, rx_msg.node_id, rx_msg.pressure, rx_msg.temp
 1163              		.loc 1 326 9 is_stmt 1 view .LVU298
 327:Core/Src/main.c **** 
 1164              		.loc 1 327 62 is_stmt 0 view .LVU299
 1165 025a 9DF81C50 		ldrb	r5, [sp, #28]	@ zero_extendqisi2
 327:Core/Src/main.c **** 
 1166              		.loc 1 327 78 view .LVU300
 1167 025e BDF81D20 		ldrh	r2, [sp, #29]	@ unaligned
 327:Core/Src/main.c **** 
 1168              		.loc 1 327 95 view .LVU301
 1169 0262 BDF91F10 		ldrsh	r1, [sp, #31]	@ unaligned
 326:Core/Src/main.c ****             num_rx_msgs, num_uniq_msgs, rx_msg.msg_id, rx_msg.node_id, rx_msg.pressure, rx_msg.temp
 1170              		.loc 1 326 9 view .LVU302
 1171 0266 0291     		str	r1, [sp, #8]
 1172 0268 0192     		str	r2, [sp, #4]
 1173 026a 0095     		str	r5, [sp]
 1174 026c 4A46     		mov	r2, r9
 1175 026e 3146     		mov	r1, r6
 1176 0270 3148     		ldr	r0, .L48+56
 1177 0272 FFF7FEFF 		bl	printf
 1178              	.LVL101:
 330:Core/Src/main.c **** 
 1179              		.loc 1 330 9 is_stmt 1 view .LVU303
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 38


 1180 0276 09AC     		add	r4, sp, #36
 1181 0278 4027     		movs	r7, #64
 1182 027a 3A46     		mov	r2, r7
 1183 027c 0021     		movs	r1, #0
 1184 027e 2046     		mov	r0, r4
 1185 0280 FFF7FEFF 		bl	memset
 1186              	.LVL102:
 333:Core/Src/main.c ****         tx_spi_cmd(&hspi2, W_REGISTER(STATUS), tx_payload, 1);
 1187              		.loc 1 333 9 view .LVU304
 333:Core/Src/main.c ****         tx_spi_cmd(&hspi2, W_REGISTER(STATUS), tx_payload, 1);
 1188              		.loc 1 333 23 is_stmt 0 view .LVU305
 1189 0284 8DF87070 		strb	r7, [sp, #112]
 334:Core/Src/main.c **** 
 1190              		.loc 1 334 9 is_stmt 1 view .LVU306
 1191 0288 214F     		ldr	r7, .L48+16
 1192 028a 0123     		movs	r3, #1
 1193 028c 1CAA     		add	r2, sp, #112
 1194 028e 2721     		movs	r1, #39
 1195 0290 3846     		mov	r0, r7
 1196 0292 FFF7FEFF 		bl	tx_spi_cmd
 1197              	.LVL103:
 337:Core/Src/main.c ****         fifo_status = rxbuffer[0];
 1198              		.loc 1 337 9 view .LVU307
 1199 0296 0123     		movs	r3, #1
 1200 0298 0193     		str	r3, [sp, #4]
 1201 029a 0094     		str	r4, [sp]
 1202 029c 0023     		movs	r3, #0
 1203 029e 1A46     		mov	r2, r3
 1204 02a0 1721     		movs	r1, #23
 1205 02a2 3846     		mov	r0, r7
 1206 02a4 FFF7FEFF 		bl	tx_rx_spi_cmd
 1207              	.LVL104:
 338:Core/Src/main.c ****         rx_fifo_empty = FIFO_STATUS_RX_EMPTY(fifo_status);
 1208              		.loc 1 338 9 view .LVU308
 338:Core/Src/main.c ****         rx_fifo_empty = FIFO_STATUS_RX_EMPTY(fifo_status);
 1209              		.loc 1 338 21 is_stmt 0 view .LVU309
 1210 02a8 9DF82430 		ldrb	r3, [sp, #36]	@ zero_extendqisi2
 1211              	.LVL105:
 339:Core/Src/main.c **** 
 1212              		.loc 1 339 9 is_stmt 1 view .LVU310
 341:Core/Src/main.c **** 
 1213              		.loc 1 341 16 view .LVU311
 1214 02ac 13F0010F 		tst	r3, #1
 1215 02b0 17D1     		bne	.L46
 1216              	.LVL106:
 1217              	.L35:
 310:Core/Src/main.c ****       {
 1218              		.loc 1 310 7 view .LVU312
 313:Core/Src/main.c **** 
 1219              		.loc 1 313 9 view .LVU313
 1220 02b2 0923     		movs	r3, #9
 1221 02b4 0193     		str	r3, [sp, #4]
 1222 02b6 09AC     		add	r4, sp, #36
 1223 02b8 0094     		str	r4, [sp]
 1224 02ba 0023     		movs	r3, #0
 1225 02bc 1A46     		mov	r2, r3
 1226 02be 6121     		movs	r1, #97
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 39


 1227 02c0 1348     		ldr	r0, .L48+16
 1228 02c2 FFF7FEFF 		bl	tx_rx_spi_cmd
 1229              	.LVL107:
 315:Core/Src/main.c **** 
 1230              		.loc 1 315 9 view .LVU314
 315:Core/Src/main.c **** 
 1231              		.loc 1 315 20 is_stmt 0 view .LVU315
 1232 02c6 0136     		adds	r6, r6, #1
 1233              	.LVL108:
 318:Core/Src/main.c **** 
 1234              		.loc 1 318 9 is_stmt 1 view .LVU316
 1235 02c8 07AB     		add	r3, sp, #28
 1236 02ca 94E80300 		ldm	r4, {r0, r1}
 1237 02ce 83E80300 		stm	r3, {r0, r1}
 320:Core/Src/main.c ****         {
 1238              		.loc 1 320 9 view .LVU317
 320:Core/Src/main.c ****         {
 1239              		.loc 1 320 19 is_stmt 0 view .LVU318
 1240 02d2 BDF82130 		ldrh	r3, [sp, #33]	@ unaligned
 320:Core/Src/main.c ****         {
 1241              		.loc 1 320 12 view .LVU319
 1242 02d6 4345     		cmp	r3, r8
 1243 02d8 BFD0     		beq	.L34
 322:Core/Src/main.c ****           prev_rand_id = rx_msg.msg_id;
 1244              		.loc 1 322 11 is_stmt 1 view .LVU320
 322:Core/Src/main.c ****           prev_rand_id = rx_msg.msg_id;
 1245              		.loc 1 322 24 is_stmt 0 view .LVU321
 1246 02da 09F10109 		add	r9, r9, #1
 1247              	.LVL109:
 323:Core/Src/main.c ****         }
 1248              		.loc 1 323 11 is_stmt 1 view .LVU322
 323:Core/Src/main.c ****         }
 1249              		.loc 1 323 24 is_stmt 0 view .LVU323
 1250 02de 9846     		mov	r8, r3
 1251 02e0 BBE7     		b	.L34
 1252              	.LVL110:
 1253              	.L46:
 346:Core/Src/main.c ****       {
 1254              		.loc 1 346 10 view .LVU324
 1255 02e2 5446     		mov	r4, r10
 1256              	.LVL111:
 346:Core/Src/main.c ****       {
 1257              		.loc 1 346 10 view .LVU325
 1258 02e4 AA46     		mov	r10, r5
 1259 02e6 059D     		ldr	r5, [sp, #20]
 346:Core/Src/main.c ****       {
 1260              		.loc 1 346 7 is_stmt 1 view .LVU326
 346:Core/Src/main.c ****       {
 1261              		.loc 1 346 10 is_stmt 0 view .LVU327
 1262 02e8 BBF1000F 		cmp	fp, #0
 1263 02ec 02D1     		bne	.L36
 348:Core/Src/main.c ****         ptn_sn_paired = true;
 1264              		.loc 1 348 22 view .LVU328
 1265 02ee 5446     		mov	r4, r10
 349:Core/Src/main.c ****       }
 1266              		.loc 1 349 23 view .LVU329
 1267 02f0 4FF0010B 		mov	fp, #1
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 40


 1268              	.LVL112:
 1269              	.L36:
 353:Core/Src/main.c ****       {
 1270              		.loc 1 353 7 is_stmt 1 view .LVU330
 353:Core/Src/main.c ****       {
 1271              		.loc 1 353 10 is_stmt 0 view .LVU331
 1272 02f4 A245     		cmp	r10, r4
 1273 02f6 01D0     		beq	.L47
 355:Core/Src/main.c ****       }
 1274              		.loc 1 355 20 view .LVU332
 1275 02f8 0226     		movs	r6, #2
 1276              	.LVL113:
 355:Core/Src/main.c ****       }
 1277              		.loc 1 355 20 view .LVU333
 1278 02fa 83E7     		b	.L37
 1279              	.LVL114:
 1280              	.L47:
 308:Core/Src/main.c **** 
 1281              		.loc 1 308 18 view .LVU334
 1282 02fc 0026     		movs	r6, #0
 1283              	.LVL115:
 308:Core/Src/main.c **** 
 1284              		.loc 1 308 18 view .LVU335
 1285 02fe 81E7     		b	.L37
 1286              	.L49:
 1287              		.align	2
 1288              	.L48:
 1289 0300 00000000 		.word	_impure_ptr
 1290 0304 00080140 		.word	1073809408
 1291 0308 00000000 		.word	.LANCHOR3
 1292 030c 00000000 		.word	hcan
 1293 0310 00000000 		.word	hspi2
 1294 0314 00000000 		.word	.LC11
 1295 0318 14000000 		.word	.LC12
 1296 031c 24000000 		.word	.LC13
 1297 0320 00000000 		.word	htim2
 1298 0324 34000000 		.word	.LC14
 1299 0328 48000000 		.word	.LC15
 1300 032c CC000000 		.word	.LC18
 1301 0330 E0000000 		.word	.LC19
 1302 0334 58000000 		.word	.LC16
 1303 0338 6C000000 		.word	.LC17
 1304              	.LBE7:
 1305              		.cfi_endproc
 1306              	.LFE68:
 1308              		.global	pll_config
 1309              		.global	fhss_freqs
 1310              		.section	.rodata
 1311              		.align	2
 1312              		.set	.LANCHOR3,. + 0
 1313              	.LC0:
 1314 0000 20200000 		.word	8224
 1315 0004 00000000 		.word	0
 1316 0008 40200000 		.word	8256
 1317 000c 00000000 		.word	0
 1318 0010 00000000 		.word	0
 1319 0014 00000000 		.word	0
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 41


 1320 0018 01000000 		.word	1
 1321 001c 01000000 		.word	1
 1322 0020 01000000 		.word	1
 1323 0024 00000000 		.word	0
 1324              	.LC1:
 1325 0028 00010000 		.word	256
 1326 002c 00000000 		.word	0
 1327 0030 00000000 		.word	0
 1328 0034 00000000 		.word	0
 1329 0038 08000000 		.word	8
 1330 003c 00       		.byte	0
 1331 003d 000000   		.space	3
 1332              	.LC2:
 1333 0040 01       		.byte	1
 1334 0041 03       		.byte	3
 1335              		.section	.bss.i.0,"aw",%nobits
 1336              		.set	.LANCHOR1,. + 0
 1339              	i.0:
 1340 0000 00       		.space	1
 1341              		.section	.bss.pll_config,"aw",%nobits
 1342              		.align	2
 1343              		.set	.LANCHOR2,. + 0
 1346              	pll_config:
 1347 0000 00000000 		.space	60
 1347      00000000 
 1347      00000000 
 1347      00000000 
 1347      00000000 
 1348              		.section	.rodata.fhss_freqs,"a"
 1349              		.align	3
 1350              		.set	.LANCHOR0,. + 0
 1353              	fhss_freqs:
 1354 0000 CB669236 		.word	915564235
 1355 0004 00000000 		.word	0
 1356 0008 DDAAE835 		.word	904440541
 1357 000c 00000000 		.word	0
 1358 0010 38F4D435 		.word	903148600
 1359 0014 00000000 		.word	0
 1360 0018 3869E535 		.word	904227128
 1361 001c 00000000 		.word	0
 1362 0020 0D0BB036 		.word	917506829
 1363 0024 00000000 		.word	0
 1364 0028 D54F3436 		.word	909397973
 1365 002c 00000000 		.word	0
 1366 0030 1B612B36 		.word	908812571
 1367 0034 00000000 		.word	0
 1368 0038 0DA89036 		.word	915449869
 1369 003c 00000000 		.word	0
 1370 0040 73B7CA36 		.word	919254899
 1371 0044 00000000 		.word	0
 1372 0048 39613937 		.word	926507321
 1373 004c 00000000 		.word	0
 1374 0050 EFED2E37 		.word	925822447
 1375 0054 00000000 		.word	0
 1376 0058 B3E40437 		.word	923067571
 1377 005c 00000000 		.word	0
 1378 0060 F930DB35 		.word	903557369
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 42


 1379 0064 00000000 		.word	0
 1380 0068 F699A336 		.word	916691446
 1381 006c 00000000 		.word	0
 1382 0070 533F6236 		.word	912408403
 1383 0074 00000000 		.word	0
 1384 0078 CE1F9636 		.word	915808206
 1385 007c 00000000 		.word	0
 1386 0080 D999DF35 		.word	903846361
 1387 0084 00000000 		.word	0
 1388 0088 18EF8F36 		.word	915402520
 1389 008c 00000000 		.word	0
 1390 0090 82980536 		.word	906336386
 1391 0094 00000000 		.word	0
 1392 0098 74FFC335 		.word	902037364
 1393 009c 00000000 		.word	0
 1394 00a0 EC243336 		.word	909321452
 1395 00a4 00000000 		.word	0
 1396 00a8 0F421336 		.word	907231759
 1397 00ac 00000000 		.word	0
 1398 00b0 E39BC336 		.word	918789091
 1399 00b4 00000000 		.word	0
 1400 00b8 63A7FC35 		.word	905750371
 1401 00bc 00000000 		.word	0
 1402 00c0 37830437 		.word	923042615
 1403 00c4 00000000 		.word	0
 1404 00c8 60260636 		.word	906372704
 1405 00cc 00000000 		.word	0
 1406 00d0 088C6736 		.word	912755720
 1407 00d4 00000000 		.word	0
 1408 00d8 82F6E835 		.word	904459906
 1409 00dc 00000000 		.word	0
 1410 00e0 281C0636 		.word	906370088
 1411 00e4 00000000 		.word	0
 1412 00e8 CF050F37 		.word	923731407
 1413 00ec 00000000 		.word	0
 1414 00f0 79E4D935 		.word	903472249
 1415 00f4 00000000 		.word	0
 1416 00f8 57EE4A37 		.word	927657559
 1417 00fc 00000000 		.word	0
 1418 0100 ECF46536 		.word	912651500
 1419 0104 00000000 		.word	0
 1420 0108 C406C136 		.word	918619844
 1421 010c 00000000 		.word	0
 1422 0110 2FFB2C37 		.word	925694767
 1423 0114 00000000 		.word	0
 1424 0118 4D5D4937 		.word	927554893
 1425 011c 00000000 		.word	0
 1426 0120 0ECFCD36 		.word	919457550
 1427 0124 00000000 		.word	0
 1428 0128 319BA236 		.word	916626225
 1429 012c 00000000 		.word	0
 1430 0130 8BD40336 		.word	906220683
 1431 0134 00000000 		.word	0
 1432 0138 07AFD936 		.word	920235783
 1433 013c 00000000 		.word	0
 1434 0140 A019F436 		.word	921967008
 1435 0144 00000000 		.word	0
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 43


 1436 0148 2EFEC735 		.word	902299182
 1437 014c 00000000 		.word	0
 1438 0150 6B295B36 		.word	911944043
 1439 0154 00000000 		.word	0
 1440 0158 2E570D36 		.word	906843950
 1441 015c 00000000 		.word	0
 1442 0160 175A3337 		.word	926112279
 1443 0164 00000000 		.word	0
 1444 0168 70A64336 		.word	910403184
 1445 016c 00000000 		.word	0
 1446 0170 72E31137 		.word	923919218
 1447 0174 00000000 		.word	0
 1448 0178 1F88B836 		.word	918063135
 1449 017c 00000000 		.word	0
 1450 0180 3B8A1537 		.word	924158523
 1451 0184 00000000 		.word	0
 1452 0188 7ACFE936 		.word	921292666
 1453 018c 00000000 		.word	0
 1454 0190 F451EE35 		.word	904810996
 1455 0194 00000000 		.word	0
 1456 0198 031DFC35 		.word	905714947
 1457 019c 00000000 		.word	0
 1458 01a0 2D166F36 		.word	913249837
 1459 01a4 00000000 		.word	0
 1460 01a8 71EC7B36 		.word	914091121
 1461 01ac 00000000 		.word	0
 1462 01b0 45E62B37 		.word	925623877
 1463 01b4 00000000 		.word	0
 1464 01b8 A8CE2737 		.word	925355688
 1465 01bc 00000000 		.word	0
 1466 01c0 E4CC0436 		.word	906284260
 1467 01c4 00000000 		.word	0
 1468 01c8 F714E436 		.word	920917239
 1469 01cc 00000000 		.word	0
 1470 01d0 7748B736 		.word	917981303
 1471 01d4 00000000 		.word	0
 1472 01d8 F942FA35 		.word	905593593
 1473 01dc 00000000 		.word	0
 1474 01e0 42F4A836 		.word	917042242
 1475 01e4 00000000 		.word	0
 1476 01e8 5784C935 		.word	902399063
 1477 01ec 00000000 		.word	0
 1478 01f0 1E601037 		.word	923820062
 1479 01f4 00000000 		.word	0
 1480 01f8 CC553637 		.word	926307788
 1481 01fc 00000000 		.word	0
 1482 0200 C4673636 		.word	909535172
 1483 0204 00000000 		.word	0
 1484 0208 F5F31736 		.word	907539445
 1485 020c 00000000 		.word	0
 1486 0210 1D112537 		.word	925176093
 1487 0214 00000000 		.word	0
 1488 0218 23F8F035 		.word	904984611
 1489 021c 00000000 		.word	0
 1490 0220 7A933236 		.word	909284218
 1491 0224 00000000 		.word	0
 1492 0228 4441CA36 		.word	919224644
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 44


 1493 022c 00000000 		.word	0
 1494 0230 0FFCFC35 		.word	905772047
 1495 0234 00000000 		.word	0
 1496 0238 D10ADF36 		.word	920586961
 1497 023c 00000000 		.word	0
 1498 0240 C903A036 		.word	916456393
 1499 0244 00000000 		.word	0
 1500 0248 F2B81336 		.word	907262194
 1501 024c 00000000 		.word	0
 1502 0250 EBA6A736 		.word	916956907
 1503 0254 00000000 		.word	0
 1504 0258 15473736 		.word	909592341
 1505 025c 00000000 		.word	0
 1506 0260 566D1B37 		.word	924544342
 1507 0264 00000000 		.word	0
 1508 0268 E49A4037 		.word	926980836
 1509 026c 00000000 		.word	0
 1510 0270 4BDBFB36 		.word	922475339
 1511 0274 00000000 		.word	0
 1512 0278 D2EF1A37 		.word	924512210
 1513 027c 00000000 		.word	0
 1514 0280 70293537 		.word	926230896
 1515 0284 00000000 		.word	0
 1516 0288 24E9AB36 		.word	917236004
 1517 028c 00000000 		.word	0
 1518 0290 E1C56436 		.word	912573921
 1519 0294 00000000 		.word	0
 1520 0298 2D67D535 		.word	903178029
 1521 029c 00000000 		.word	0
 1522 02a0 56C21F37 		.word	924828246
 1523 02a4 00000000 		.word	0
 1524 02a8 F2630837 		.word	923296754
 1525 02ac 00000000 		.word	0
 1526 02b0 9B80A736 		.word	916947099
 1527 02b4 00000000 		.word	0
 1528 02b8 9F6F4A36 		.word	910847903
 1529 02bc 00000000 		.word	0
 1530 02c0 11E73337 		.word	926148369
 1531 02c4 00000000 		.word	0
 1532 02c8 1B798036 		.word	914389275
 1533 02cc 00000000 		.word	0
 1534 02d0 E6F79636 		.word	915863526
 1535 02d4 00000000 		.word	0
 1536 02d8 84795036 		.word	911243652
 1537 02dc 00000000 		.word	0
 1538 02e0 7B59E235 		.word	904026491
 1539 02e4 00000000 		.word	0
 1540 02e8 59C8EF35 		.word	904906841
 1541 02ec 00000000 		.word	0
 1542 02f0 51986736 		.word	912758865
 1543 02f4 00000000 		.word	0
 1544 02f8 CD6CD735 		.word	903310541
 1545 02fc 00000000 		.word	0
 1546 0300 D5931736 		.word	907514837
 1547 0304 00000000 		.word	0
 1548 0308 EAA23537 		.word	926261994
 1549 030c 00000000 		.word	0
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 45


 1550 0310 FE0C4537 		.word	927272190
 1551 0314 00000000 		.word	0
 1552 0318 043EE135 		.word	903953924
 1553 031c 00000000 		.word	0
 1554              		.text
 1555              	.Letext0:
 1556              		.file 3 "d:\\programs\\tools\\arm gnu toolchain arm-none-eabi\\11.3 rel1\\arm-none-eabi\\include\\
 1557              		.file 4 "d:\\programs\\tools\\arm gnu toolchain arm-none-eabi\\11.3 rel1\\arm-none-eabi\\include\\
 1558              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1559              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1560              		.file 7 "d:\\programs\\tools\\arm gnu toolchain arm-none-eabi\\11.3 rel1\\lib\\gcc\\arm-none-eabi\
 1561              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1562              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1563              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1564              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1565              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1566              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 1567              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 1568              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1569              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1570              		.file 17 "Core/Inc/main.h"
 1571              		.file 18 "Core/Inc/can.h"
 1572              		.file 19 "Core/Inc/spi.h"
 1573              		.file 20 "Core/Inc/tim.h"
 1574              		.file 21 "Core/Inc/usart.h"
 1575              		.file 22 "Core/Inc/adf4351.h"
 1576              		.file 23 "d:\\programs\\tools\\arm gnu toolchain arm-none-eabi\\11.3 rel1\\arm-none-eabi\\include\
 1577              		.file 24 "d:\\programs\\tools\\arm gnu toolchain arm-none-eabi\\11.3 rel1\\arm-none-eabi\\include\
 1578              		.file 25 "d:\\programs\\tools\\arm gnu toolchain arm-none-eabi\\11.3 rel1\\arm-none-eabi\\include\
 1579              		.file 26 "Core/Inc/nrf24l01.h"
 1580              		.file 27 "d:\\programs\\tools\\arm gnu toolchain arm-none-eabi\\11.3 rel1\\arm-none-eabi\\include\
 1581              		.file 28 "d:\\programs\\tools\\arm gnu toolchain arm-none-eabi\\11.3 rel1\\arm-none-eabi\\include\
 1582              		.file 29 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1583              		.file 30 "Core/Inc/gpio.h"
 1584              		.file 31 "<built-in>"
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 46


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s:18     .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s:24     .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s:68     .text.HAL_TIM_PeriodElapsedCallback:0000002c $d
C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s:75     .text.cmd_sm_init:00000000 $t
C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s:81     .text.cmd_sm_init:00000000 cmd_sm_init
C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s:197    .text.cmd_sm_init:00000084 $d
C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s:204    .rodata.read_back_config.str1.4:00000000 $d
C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s:230    .text.read_back_config:00000000 $t
C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s:236    .text.read_back_config:00000000 read_back_config
C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s:448    .text.read_back_config:00000158 $d
C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s:461    .text.__io_putchar:00000000 $t
C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s:467    .text.__io_putchar:00000000 __io_putchar
C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s:503    .text.__io_putchar:0000001c $d
C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s:508    .text.Error_Handler:00000000 $t
C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s:514    .text.Error_Handler:00000000 Error_Handler
C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s:546    .text.SystemClock_Config:00000000 $t
C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s:552    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s:660    .rodata.main.str1.4:00000000 $d
C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s:689    .text.main:00000000 $t
C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s:695    .text.main:00000000 main
C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s:1289   .text.main:00000300 $d
C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s:1346   .bss.pll_config:00000000 pll_config
C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s:1353   .rodata.fhss_freqs:00000000 fhss_freqs
C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s:1311   .rodata:00000000 $d
C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s:1339   .bss.i.0:00000000 i.0
C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s:1340   .bss.i.0:00000000 $d
C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s:1342   .bss.pll_config:00000000 $d
C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s:1349   .rodata.fhss_freqs:00000000 $d

UNDEFINED SYMBOLS
adf4350_out_altvoltage0_frequency
adf4350_out_altvoltage0_powerdown
adf4350_setup
memset
tx_rx_spi_cmd
printf
hspi2
HAL_UART_Transmit
huart3
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
setvbuf
MX_GPIO_Init
MX_SPI1_Init
MX_TIM2_Init
MX_SPI2_Init
MX_CAN_Init
MX_USART3_UART_Init
HAL_GPIO_WritePin
HAL_GPIO_ReadPin
HAL_CAN_ConfigFilter
HAL_CAN_Start
tx_spi_cmd
HAL_Delay
ARM GAS  C:\Users\ardav\AppData\Local\Temp\cc5qwEwf.s 			page 47


nrf24l01_setup_rf
HAL_CAN_GetRxFifoFillLevel
HAL_CAN_GetRxMessage
HAL_TIM_Base_Start_IT
HAL_GetTick
nrf24l01_get_status
HAL_TIM_Base_Stop_IT
HAL_CAN_GetTxMailboxesFreeLevel
HAL_CAN_AddTxMessage
_impure_ptr
hcan
htim2
